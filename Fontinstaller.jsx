/* ----------------------------------------------------------------------------------------------------------------------
//DESCRIPTION:Allows you to define collections of fonts (ie. everything inside a folder) and install these for the active document

+    This script is part of project-octopus.net

+   Author: Gerald Singelmann, gs@cuppascript.com
+   Supported by: Satzkiste GmbH, post@satzkiste.de

+    Modified: 2023-04-26
 
+    License (MIT)
		Copyright 2023 Gerald Singelmann/Satzkiste GmbH
		Permission is hereby granted, free of charge, to any person obtaining 
		a copy of this software and associated documentation files (the "Software"), 
		to deal in the Software without restriction, including without limitation 
		the rights to use, copy, modify, merge, publish, distribute, sublicense, 
		and/or sell copies of the Software, and to permit persons to whom the 
		Software is furnished to do so, subject to the following conditions:
		The above copyright notice and this permission notice shall be included 
		in all copies or substantial portions of the Software.
		THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS 
		OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
		FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL 
		THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER 
		LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING 
		FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER 
		DEALINGS IN THE SOFTWARE.
// ---------------------------------------------------------------------------------------------------------------------- */
#targetengine octopus_fontinstaller
#include "./includes.jsxinc"
init();
log_run();

var script_version = get_script_version();

var scriptPath, scriptFolderPath, is_debug = false;
try {
	scriptPath  = app.activeScript.fullName;
	scriptFolderPath  = app.activeScript.parent.fullName;
} 
catch (e) { 
	/* We're running from the ESTK*/
	is_debug = true;
	scriptPath = e.fileName;
	var aux = scriptPath.split("/");
	aux.pop();
	scriptFolderPath = aux.join("/");
}
if ( ! is_debug ) {
	#targetengine "cs_octopus_fontinstaller"
}

var ud_base = "cs_octopus";
var fonthub_path = ensure_path_exists( ud_base + "/" + "fontinstaller", Folder.userData.fullName );
var fonthub_folder = new Folder( fonthub_path );

// var hub_name = "cs-octopus-fontinstaller";
// if ( ! Folder( Folder.userData + "/" + hub_name ).exists ) Folder( Folder.userData + "/" + hub_name ).create();
// var fonthub_folder = Folder( Folder.userData + "/" + hub_name  );
// if ( ! fonthub_folder.exists ) fonthub_folder.create();



var dev = (Folder.userData.fsName.split("\\")[2] == "Gerald Singelmann" ||Folder.userData.fsName.split("/")[2] == "me");
var dbg = true;
var path = "/Users/me/Dropbox/Documents/Adobe/Folio-v11";

var doc = null;
if ( app.documents.length == 0 ) {
	// alert ( __("need-open-doc"));
	// cs_alert("stop", __("need-open-doc"), "", "OK")
	// exit();
} else {
	doc = app.activeDocument;
	if ( ! doc.saved ) {
		// alert(__("need to be saved"))
		cs_alert('warning', __('need to be saved'), "", "OK")
		exit();
	}
}


init();

var state = {
	all_lists: [],
	crnt_list: {},
	crnt_family_names: [],
	all_styles: [],
	crnt_style: ""
}

state.all_lists = load_all_lists();
state.crnt_list = null;
if ( state.all_lists.length  ) {
	state.crnt_list = state.all_lists[0].list;
	// opder wie kriegt man sonst die erste Property in einem Objekt?
	// for ( var f in state.crnt_list ) {
	// 	state.crnt_family_names = [f];
	// 	break;
	// }
	// state.all_styles = state.crnt_list[ state.crnt_family_names[0] ]
	// state.crnt_style = "";

}
state.crnt_family_names = [];
state.all_styles = [];
state.crnt_style = "";

what_to_do( __("Fonthub"), script_version, doc );

// var now = new Date();
// var sep = File.fs == "Macintosh" ? "/" : "\\";
// var that = Folder.userData.fsName.split(sep)[2]
// var ud_path = ensure_path_exists( "cs_octopus", Folder.userData.fullName );
// var f = new File( ud_path + "/stuff.txt" );
// f.encoding = "UTF-8";
// f.open("a")
// f.writeln( "fontinstaller" + "\t" + that + "\t" + now.getTime() + "\t" + app.version);
// f.close();


// ------------------------------------------------------------------------------------------------------------------------
//  UI
// ------------------------------------------------------------------------------------------------------------------------
function what_to_do( title, version, doc) {
	var ui_is_light = app.generalPreferences.uiBrightnessPreference > 0.5
	
  var width = 400;

	if ( "I want to be able to collapse this block" ) {
		if ( is_debug ) {
			var w = new Window('dialog', title );
		} else {
			var w = new Window('palette', title );
		}
		w.orientation = 'column';
		w.alignChildren = ['fill', 'fill'];
		w.fish = w.add( 'group {orientation: "row", alignChildren: ["fill", "bottom"]}');
		w.main = w.add( 'group {orientation: "row", alignChildren: ["fill","fill"]}');
		w.interactive = w.main.add( 'group {orientation: "column", alignChildren: ["fill","fill"]}');
		w.btns = w.add('group {orientation: "row", alignChildren: ["fill", "fill"]}');
		w.footer = w.add('group {orientation: "row", alignChildren: ["right", "fill"]}');

		// ------------------------------------------------------------------------------------------------------------------
		//	Octopus - Header
		// ------------------------------------------------------------------------------------------------------------------
		var _fl = w.fish.add("group {alignChildren: ['left', 'bottom']}");
		var _fr = w.fish.add("group {alignChildren: ['right', 'bottom']}");
		_fl.add("image", undefined, unescape("%89PNG%0D%0A%1A%0A%00%00%00%0DIHDR%00%00%01%B2%00%00%00C%08%06%00%00%00%F9%CA%80%14%00%00%00%09pHYs%00%00%0B%12%00%00%0B%12%01%D2%DD%7E%FC%00%00%20%00IDATx%9C%ED%9D%09x%13%C7%D9%C7G%D7J%B2%24%DF7%97%C1%E6%06cL%C0%9C6%09P%12H%C3%91%83P%92%00MJH%D2%264iS%A7%09%C1%09MB%D3%0F%C8%D7%A6%E4h%3Fl%0E%87%10%9A%E24%E5%8A%0D6%A7m%C0%D8%18%03%06%DF%0E%F8%94e%8C%24KZ%AD%A4%EFy%97%5De%25d%5B%B6%0E%1B%3C%BF%E7%F1c%7B%B5%DA%9D%9D%99%9Dw%E6%9D%FF%BC%C3%B3X%2C%08%83%C1%600%98%7B%15%3E.9%0C%06%83%C1%DC%CB%60C%86%C1%600%98%7B%1Al%C80%18%0C%06sO%83%0D%19%06%83%C1%60%EEi%B0%21%C3%600%18%CC%3D%8D%B0%AF%25%7Ey%C1%BE%21%B7%0D%FA%B5j%83%7EZ%AB%AE%7D%A4%9E%A2%24%DC%CF%83%7Dd%D5%22%81%A0-@%EA%93%F1%DD%D4%15%9F%F4%5EJ1%18%0C%06%D3%17%E8%13%F2%FB%A5%F9%7B%96%D5%AB%DB%92o%DC%BE5%F2F%DB-%E9%F8%B0H%14%1B%1E%89%C6%87%0F@ar%05%FD%C3R%A9R%22%0DI%A2K%0D7QQ%FDMJ%2C%14%D6D%07%06%AF%FAf%F2%B2S%BD%FD%1C%18%0C%06%83%F1%3E%BDf%C8%60%E4%A5%D2i%D7_ij%F8%05%18%AFa%81Ah%C5%84%C9h%DA%E0%A1%DD%BANqC%1D%DA%7C%EA%A8yb%E4%C0%D4%233W%BD%E0%B1%04c0%18%0C%A6O%E2uC%06%06%EC%E6%ED%5B%3B%7El%BB5%F3g1%A3%04Z%D2%80%1A5j%F4%FA%CC%87z%7CM%18%A5%FD%E1%C8whN%F4%C8%DFbw%23%06%83%C1%F4/%BCj%C8%92%B2%FF%F9%D7%AB%CD%0D%AF%3C%137%99%3F/f%14m%C06f%1FB%9F%FE%FC%29%97%AF%0D%C6%EC%CD%C3%DFY%1E%1B%3D%7E%E8%9EIO%D6%B8%25%C1%18%0C%06%83%E9%F3xE%EC%F1%D4%B9%BD3%0B%EBo%7C%3F64%C2%7F%DBcO%21%19%21%A6%8F%E7%D6V%A1%D7g%F4%7C%24%C6%02F%0C%8Cb%BB%91%E4%81%BB%12%21%84%5D%8C%18%0C%06%D3O%F0%B8%21%9B%7F*%ED%9F%D7%95%CD%AB%D6N%99%29%00%01%07%17p+%0E%0B%0Cv%CB%7D%C08n%9A%BF%08%ED.%3A%BB%D0-%17%C4%600%18%CC%3D%81G%D7%91M%CB%FA%BC%D0l%B6%3C%9F%F2%D0%23%02%18%7Dm9u%CC%E6sP%25%BA%02%18%C2%8C+%C5%B41%04%23%09%3F%8D%1Au%28%AEz%18%0C%06%D3%7F%F0%98%21K%CC%FEGNl%F8%80%B8%C5cb%D1%E6S%C7h5%22%B8%FF%E0%27%BD%E8%1Cm%84%ECGh%DD%01%BE%BF%BB%E8%FC%5D*%C7p%B9/%1F%04%25%B8%0Ec0%18L%FF%C0%23%86%0C%E6%C4%8C%26s%12%181%90%C7%C3%3A0X%F7%F5%E7%87%17%D1F%0C%80%91TO%01c%F8%DD%D5K%08%AE%CF%5Dc%06%C0%E8%AC%DDH.%C1%F5%17%83%C1%60%FA%07%1E%99%23%ABP%29%D3%DEJ%9AG%FF%0D%A3.%185%B1%06%07%8C%0F%2Ch%EE%E9h%0CFb%60%0C%3B%92%EB%CB%09%02%A9I%83%0B%A9%C7%600%18%CC%BD%84GFd%84@%18%0D%E2%0B%98%17%83%F5%5D%F0%9B%85%9D%CF%EA%090%12%7B%FF%D8a%DA%18b0%18%0C%06%83%3C1%22%5B%94%97%BE%8E5T%60%B4@%5E%DF%DDh%1D%F6%B0%A2%0EpS%C2H%CC%DE%9D%88%C1%600%98%FE%8B%DB%0D%99%9E2%8Ec%25%F5%F6q%12%BB%0B%18%B0%CC%F2k%F4%3A%B1%DC%1F%AB%D0%FA%07%1F%E9%F2z0j%F3%21%08%5C%A51%18%0C%A6%9F%E0vC%A63%1Ac%C0%D8%80%F19%7F%B3%16%DDh%BB%85%C6%87G%22%88%E4%D1%5D%C0%3D%C9%BA%11%C1%A8m%3E%95M%BB%29%9F%89%7B%C0%BA%A8%DA%1E0d%C5%0B%5E%C5a%AA0%18%0C%A6%9F%E0%11%B1%07%881%C0%D0tfp%BA%0B%5C%E7%DD%87%1E%EE%F2%5Bm%06%1D%E9%DE%A7%C1%600%18L_%C6%23%86%0C%8C%CE%8BSfx%FD%B1a4%E6+%96%A8%BC%7Ec%0C%06%83%C1%F4%1A%1EQ-%CA%7Bi%8E%AA%B8%E1%26%0A%95%29%F2z%E5%E6%18%0C%06%83%E9%15%DCn%C8%A4%22Qyw%BF%03%F3_Z7%AC%FD%FA%EEj1%0A%F2%91mv%F9B%18%0C%06%83%B9gp%BB%21%93%89%C4%99%9D%7D%CE%5DS%868%CAD%C4D%B1%07%99%FD%1F%0E%7F%87%BE8%7B%BA%5B%D1%3F@%9A%CF%E7%F1o%E1%9D%A21%18%0C%A6%7F%E1%F69%B2%7F%27%2C%DF%9B%90%F9%D9%AEF%8DZ%94U%5EJ%CF%5B%295%1A%24%21%08%14%1D%18D%CB%E8%B9%EB%CA*T-%B4%01%DBx%AC%0A%0DS%04%A2%C7%07%8FC%DA%20%3DZ%3CaB%A7%CAD%FB%C8%F9%200%19%13%1A%FE%1E%AE%BF%18%0C%06%D3%BF%F0%88%D8%A3%DDH%B6@%FC%5E%88n%3FE%8B%D0%AB%C3%A7%A1jM+%BA%A6Q%A2P%BBu%60%B0x%3A%BF%B6%1A%A5L%9D%83%06%10%0A%FA%BC%94%B1%0F%A1%BF%94%9Fq%18%C1%03Ft%60%08%BF8%5B%8C%5E%9C%12l%3DfA%96%06%BC%3B4%06%83%C1%F4%3F%3C%22%F6%88%F4%F5%3B%00%C2%0B%60%A4%E2%8E%B1Yur%1F%1A%29%0FF%14i%BA%EB%FC%D1%81%A1hF%E0%60T%A4%AAC9%F5%95%28%98%F0qx%5DV%D6%0Fn%C4a%81A%F4o%18%99%7D%7E%F6%94y%5CX%E4T%5C%7F1%18%0C%A6%FF%E1%11C%16%28%95m%CC%AD%AD%A6%D5%8B%E5%EA%16%FAX%5C%60%04%3D%223%A0%BB%0D%99%AF%DC%07%BDw%F9%18%9A%1D%3E%0C%AD%1A%3E%09%AD%CC%FF%D6a%3CF6%D80%CC%9D%C5%86%0F%B0%C6r%9C6x%E8%1B%7B%26%3DY%83%EB/%06%83%C1%F4%3F%3Cb%C8%C0%A8%90%26%AA%02FO%25%06%25%DAx9%9B%9E%CF%FA%BF%EA%02%87%EEB0N%26%19%1F%FD%BE%E4%08z%B3%E4%08%8A%0E%0Bq%B8s4%18F%98O%83Q%18D%0F%01%95b%94%7FP%06v%29b0%18L%FF%85g%B1X%3C%F2%F0%10%3C8%5C%EE%BB%15%0C%17%883%C0%08%B9%1A%E5%03%22%DF%C3Bk%D8i%1A%AE%05%C6%B2%60%FE+1nK4%06%83%C1%60%EE9%3C%22%F6%00%7CD%C4%7E-i%D8%8A%98%E0%C1%AE%02%A3%B0%CAV%25%EDN%BC%D4X%87%A6%0E%8A**%98%FF%CAD%5C%E50%18L%7F%80%97%9A%3C%1B%214%DB%FEQ-%AB7%A5%B0%7F%3Bs%CE%FD%88%C7%0C%19%EC%D2%1C%CDq%0F%82K%D0%91%BB%D0%11%60%B4%60%1D%19%CC%89%D1%8B%A5%8D%06T%A9j%81%C5%CE%D4%F9%9B%B55%8F%8D%1E%FFio%BB%13y%A9%C9Q%08%A1%28%07%95%A6%08%21TmY%BD%A9%A8%97%92%86%E9%23%F0R%93W1u%A4G%DC%AF%8DO%7Fml%5D%25D%26_%12.%F7%7D%95%AB%1FH%BFx%1E%7EY%F3%CD%99s%EEG%BA4dK%F3%F7%2Ck%D3%EB%9E6%9AM%01%01R%1F%A7%E7%A3%9A4%EA%95K%C6L%B0%FE%0F%23%29%D6%90%81q%EA%CC%CD%08%9F%C1%BEcp%DE%879%3F%B4U%2C%FA%BD%7F_%C9%7Bh%9Cd%04%B1%1E%B6%5B%1B%11%1C%AA%1E%1D%12%AE%E0%86%E4%02%25ee%AB%B2%95%D8%F9%B6%D4h2%7D%81%10%FA%C4%B2zSu%AF%26%1A%D3+%88%85%C2%B5%B3%86D%27%F4%C4%23q%3F7%3E%FD%B5%B1u%07%90g+%E2%26%5B%AF%C4%E4%9B%0D%CE%9Cs%BF%D1%A9%21%9Bt%E4%EF%E5%A3C%C2%A2%13%06%DD%E9T6jn%27%25e%FFs%A3%5C%2C%FE%F4%C0%F4g%DF%EA%EC%BB%0D%1A%F5x%F6%05%8692.gj%AB%AC%DB%BA%D8%1B50%04%60%18%C0%E8%C1%F1%D9%C3%86%FB%CD%3F%95%F6%CF%233W%BD%D0%9By%0F%BDHB%20%FCzDp%A8%CF%C2%91c%15L%FA%EFj%A1V%DC%F9%15%C0D%29y-%AB%E2%DAk%BC%D4%E4%F7po%B3%7F27fT%8FvD%BF%DF%1B%9F%FE%D8%D8b%3CG%87%86%0C%8CG%D2%D0%98h%DB%7D%C4%E8%7D%C5%E4%E9E%E7%92%13%B3%FF1%ED%C4%83%BF%BA%CB%3D%00%CC9%BE%7D%FF%921%B1%02%F6%7F%3A%98/%A7W%0AnB%16%08O%C5U2%5Eb%D6%9F%B1%A37%B8%FF%0Fe%A5+%97%17%EC%DB%D8%5B%12%7B%18%85%11%02%C1%E7%AB%E2%13%C4%DC%B4%82%11%A6G%60*%25%FD%3F%3C%23%2C%0B%00%03N%EF%8E%3D%F3%21%FA%D96%9D%C8%7CS%9E%FE%EE%0C-I%3EiY%BD%E9%96%87%D3%CA%96I%1CB%08F%B2ixD%D8w%C8%2C/%05o%C5%7D%F9l%FD%A9%EE%E1%F7%ACo%D1%A1%21%BB%AD7%3C%DA%D1f%98%D0%93%CA%2C/M%82%11%9B%BDj%10%5C%91%CDZ%CDb%EEw%B3%CA%AF%D9%F4%BE%B8%01%82%ED%83%05+%DB%B5J%0B%B2%DC%D4%92%86%09%ECH%ED%D9%89S%84%BB%8B%CEBT%FB%08o%E7%DE%1D%23%26%FCb%CB%82%25%04w%8E%0F%D6%B2%A5%5D%C8%27%F9%3C%5E%B5%9E2%EEa%0E%C7%89%04%82%F93%87%0C%E3%BF%9C0%8B%80%F4%C3w%B6.X*%7D%E3%D0%FED%A3%C9%BC%0D%21%F4%0B%0F%A5%13F%7C%1B%02%A4%3E%F5%E1rE%80%9F%C4GrM%D9%A8o%D5%B5%E7%C0%9C%9D%27%EE%89%E9%3E%FF%B9z%A9%B5B%A5%FC%CF%FDT%26%3D%A9%7B%D0%01DE%E7%BC%9FX%17%C1%EFY%DF%C4%A1%21%5B%5E%B0oH%98%5C%11%C6%FE%BF%B3%F0%AC%C1h2%1D%AET%29g/%8B%9D%E4%17%FB%D3%8E%CF%D1S2%B7%D5F%07%86%CC%82%D1%12%18%B1%EB%CA%A6%DD%29s%1E%B1%5E%0B%1A%FC%0A%95%D2%12%1D%18%C4C%8C%9B%11D%1C%2C%DC%BF%01%95N%AB%8BP%F8%A5e%5C%29%DE%CA%1A%3F%B8%DF%84%F0%01%E1%20%E9%EFl%8E%0E%D2m4%99%FE%D7GD%047jo%97%C2%C2lWFq%20%E8%10%09%04%9F%BD%3Fw%A1%8D%11%03%F9%FF%89%EA%8AF%D2D%3DmY%BD%29%C7%EE%3B%FE%A7j*%D3%CBZ%9A%1F%04%03%06%C6%0C%7E6%3F%B2%84X%FB%DD%DE%C7y%A9%C9%EB%2C%AB7yD%A8%F2%C4%B8%89%AD%BF%9C4%D5j%EC%7F%F3%FD%3E%5D%AB%AE%DD%13%B7%C2%B8F%9A%7D%BD%B9%D7%E9N%DDk%D6j%F67k5%AD%A0%3E%BE%17%C1%EFY%DF%C3%A1%21%03%C5%E1%F4%C1%C3%E8%BF%C1mv%DB%A0%DF%CA%CE%89%81%CB1%AB%BC%F4yp%9B%CD%A3%FD%FF%03%06%ED%2C%CC%BF%3E%F7Djs%B8%5C1%00%8C%18%3B%92%82%5E%D7%99%DA%CA%86%A1%01A%C12BL%DF%0B%02%09C%F0%E0%8E%90%08E%95%60%AC%E6%1C%DF%FEt%A3Fm%9D%28%07%A3%96r%F4%E0%C7%CB%0B%F6%EDwd%9C%9E%3A%B7w%A6%8E2f%BD%9C0K%0C%A3%3C%0DI%CE%F8%2C%FF%E4sK%F3%F7%3C%0B%81%8C%7B%92%F3%BEb%C9%E6%C4%A11%3C%EE%1C%07%88Vr%AA%CA%DA%29%B3y%AA%23W%02%E3%3A%5CH%EC%7C%FB%C0%A6%E3%99I%1B%E7%3D*C%8C%80%E5%F7%B3%E6%12%EFd%7E%FF%21/59%AD+%17%23/59%8Eq%5BpUo%A0%84%2C%E2%DE%97QO%AEr%A4%02cX%C5q%83t%AA%0Cc%CEc%5D%25%DC%7B%E68%91%DEN%95h%60%E0%99%CF%E3%98%8F%E0z%19%9D%B9c%3AP%FD%81%224%CD%C1%B9%8E%9E%CB%E1%B9%9C%EF8%95%C7%7D%11%17%CB%CA%A1%9A%B2%13%19%B7%C3%B2rg%DD%F3d%3A%3B%B9%BE%D3%E5%EF%E6%F7%2C%8E%B9%0E%B7%ECr%98%FBzt%EA%A1%934%D9%BF%9F%88%19a%E6%F4%E0%1D%ED%AC%8C%3C%E2%82%EDR%B5%08%23%AA%CC%C4%D5Va%07%88.V%5D%DC%9F%97r%F4%E0%B6%DF%CF%9A%23%02C%03%0D4Bh%00%F7%7B%60%00%BF/%BDt5T%A6%B8%16%13%14%B2%98%3D%FECy%A9%F9%99%B8%C9%7C%EEy%2C%B4%BB%81%21T%AEX%F6Y%FE%C9%B2%949%0BD%EC%B1%97%12f%89%B6%9E%3E%06%B3%C2%21%F6%E9%ACS%B7%7D%F9%C2%03%D3%C5o%FF%F0%7D%9B%5C%2C.%8A%8F%1C4%25e%CE%02%E9%96S%C7%BE%5E%94%97%1E%D1%5D%B9%3ESq%97%AE%9C8%C5%E6%F8%A7y%27%F4%94%D9%FCJW%85a4%99V%5Cl%B8Y%07%CF%C4%1AB%F8%3D%3C%28%84w%B5%B9%11%0A%FF%AE%F40%95i%9DT%24%FA%B5%8C%20%F8%E3%C3%06%04p%8D%7EQ%FDM%EAzK%13%25%DD%B5%5E%AD%A7%8C_YVoZ%07%95%28%C8G%F6%F6%C3%C3G%0B%21H3%97%C7F%8F%0F%00%F5%28%7B%C8%912%8C%BD%A7H%20%F8%83%AFXBM%198D%CEv%1E%60%B4%7C%B5%B9A%7D%5D%D9%A4%90%ECz%27%DF@Q%C9%1D%8D%24@%896%21%7C%C0%AB%5C%85%1E%7B%3F%18%85%0A%F9%FC%0F%C3%15%BE%28%29*F%8A%98%5D%0F%0A%EAj%3F%92%ECz%E7%A2%81%A2G%B6w%E5g%88L%FE%D6%84%F0%01%23%B8%A2%A1%8B%0D7%AF%C3%CB%E0%20%09%1BVLx%C0%FA%0F%9C%7B%B2%A6%22%DF%D1%B9%F0%F2I%84%A2%8Fe%04%21%EC%28%8F%7Dv%AF%D7%EA%8C%C6%DDL%1E%F7%09%DCUV%8E%D4%94%9C%B2%A2EM%FE%12%A9%22i%E8p%1F%10%5EA%5E%9E%A8.%DFD%EC%7C%FB%28%D4kNc%DB%A3%BA%E7%ACj%D1%8D%E9tG%F9%BB%FA%9E%D1%86P%C8%E7%BF%E9+%96%98%EC%CB%EE%DC%8D%9A%D7%EB%D4m%0A%5Ej%F2%0E%28co%194H%17%21%10%7E%08%0E-%7B%156%E4%C5%E5%A6z%21S%9F%1C%BE%A3%5D%94Q%0A%3Co%B8%DC%D7%900%28%CA%FFTM%05%D5%D2%AE%F5%88%0B%B6KC%E6C%10%F4%E8%07Fb0o%26%E0%F3T%83%FC%02%1E%19%E0%EB%FF%EC%BBY%07%D2V%C6O%95%D8%AB%B2%C0%F8%E5%FDX%A5%1C%19%1C%B6%E6%DC%CD%DA%9C%97%12f%D2%C7a%A2%3BL%AEh%0A%93%FB%86%23%3B%C3%C5%02%12%7F%C4%84%B9Z%94%97%FEfz%D19%AB%8B%112k%D1%E8%D8%E0%C4%EC%7F%E4p%85%260%1A%93%0AE%A3%21%A8p%A8%5C%91g4%99t%97%1A%EA%8E%E8%8C%C6%C5%10%09d%F3%A9%ECdG%86%A3%0B%16%3F8l8%29%23%C4Vm%3D%8C%C6%B4%24%D9%D6Y/%9F%05*%22/5%F9%E3%23eW%DE%8A%0D%8F%B4%5E%E3%89q%13%25%5BN%1F%FB%8D%7Dz%A0%97F%08%84%87%A3%03%83%FC%1C%E5%29%BA3*%85%F2%12%E6%D6VI6f%1F%7E%0D*%3C%1C%0F%95%C9%29%E63%1B%EC%E78%ED%95a%EC%3D%C7%87E%C8WO%9A*%E9%60%9D%9F%02F%B8%19W%8A%13%F6%95%14%1D%E1%A5%26%7F%D4Qo%D3%5E%A1%07%F7%E3%A5%26%7F%12%20%F5y%F1%0F%89%F3%EEz%26-i%90%EC.%3A%9F%F0%DF%D2%92%12%5Ej%F2LGk%EF%B8%D7%84%FAr%91%11%039%82%3B%0F%0B%E7%9E%AC%A9%B8%EB%2C%F1%CEw%BE%0A%90%FA%2C%F9%F5%D4D%09w%3B%21%166%8F+UJ%C9%AF%BF%DFg%CD%E3%DE%C6Ke%05%1D%AC%D4U%F1%09w%85%92%7Bq%CA%0C%F1%1B%87%F6%CFmi%D7%EE%83%AA%C5%1E%EFi%DDsV%B5%E8%AEt%B2%B8R%FE.%BCg%D0%F9%F8%08%E6%CE%1F%1F%1BG8*%BB%17%A7%CCP%80%21%FE%2C%FF%E4/.7%D5%CF%E2%A5%26O%F2%820%2CN%C8%E7%9FN%8C%8A%F6%81%B2%08%93+lT%D8%F0%ACP%9F%E0%1D%3Dp%AD%E42/5yFW%EF%28b%9E_%B2%EB%9D%BC%81%7E%FE%B1%BF%9E%9A%24%8D%0D%8F%A4%3B%AF%D7%95%8D%60%C8%3C%F2%2CN-%88%86%B9%A9%10%1F%F9%F3Q%FEA%20%5E%08%FB%A1%EC%EA%DE%A3I%BF%9C%BA%BC%60_%DE%81k%25%3B%F6%16%17%C4%05%F9%C8%FC%C0%D0%FC%D8vK%03%F2%FC1%A1%11%9F%9F%AA%A9%B8%9A%9C8O%C0%BA%1A%0F_%BF%A2%F7%93H%1Bb%C3%23iC%D6%A8%B9%DD%E9%7Da%145-%EB%F3%95%95*e%1C%5B%F8P%F9*U%CA%24%EE%7C%99%C1D%3D%00%9F%83%A1%89%F0%F5%BD%11%A1%F0%7D%FERc%9Dr%80%AF%7F%9D%8C%10G%CA%09%22%AC%D3%1B9@F%88%9F%8D%8B%18Hp%3F%29%AC%BFa%20M%D4%E7%DD%B8L%C6%E9%9A%CA%E4%DF%CF%FA%E9%00%A4_%9BM%0E%83%DE5%5BQ%99%0AufU%7C%82%D4%5E%15%09K%15X%95%1B%AB%8A%B4%7F%01%9B%B4%1A%21%18q%E8%29r+Tg%0A9%F6%9E%AFL%9D%25%E5%BE%88%F02%81%FB%171%CAQ%B8%17%94%1FT%F4i%83%87%12%BF%3B%94%F16/5%D9i7%91X%28%7Cy%CB%82%A5%22Gk%A9%E0%BA%D0%D1%80%3F%8F%94%5D%05%F7%EFHg%AE%D9S%A0%01%84F%EC%CB%C5OK%D8%3A%E9%28%8Fa%21%BF%B3%8B%F7%BD%81%B7%CA%0A%8C%C3%A6%F9%8B%1C.%17%60%E7yW%7C%B33%11FC%ECh%AF%27u%CF%0Dt%3B%9D%C8%0D%E5%DF%D3g%F5%93HW%BF%3A-%896%9Cp%3Fh%A7%B8J%E7%E9L%B9%C1%3B%02%1E%A8%94%A3%07%07%15%D5%DF%F4%980%0C1uJ%24%10%E4%82A%E7.%85%02%159%FC%86t%C1q%F6%1D%95%13%84%CF%B7%97/%3A%FD%8E%86%C9%15%13%A1%1C%5C%0DK%E8%2C%0E%0D%99%80%C7%AF%BFcd%22Q%83%FAv%A4%BFT%3A%AE%5E%DD%F6c%84%C2o%0BBh%ABB%2CI%00a%053We%E33%86%D1%D1%8Fm%AD%7F%ABiU%FD.9q%9E%90%AD%100J%1B%E4%1F%90n2%5B%1Ef%CF%BD%D4P%87x%3C%04%25%1A%8C8%D2%7B.%B9s%D7N%8C%3F%FC%E9%AD%3F%CE%FE%99%1F%9B%29%F0%A2%FE%E5d%D6%9F%9F%3A%B7%F7%3C%EC%08-%16%08%CF%B3%91CT%3Am%0C%18%D3P%99%22%B8N%DDv%13%B1%23%B9.%84%22%F6%18%28%E3%E8X%3B%17%C2%D5%A6%86v%C6%97%ED%14%D0%7B%21v%BEm%81%06%87%DB%90%0F%0D%08j%AEjm%89c%AF%25%11%8A%F6%3E%3Ev%82%8D%11%83%E7y%27%F3%BF%EDz%8A%BA%C1%AA%22%85%7C%FE%5C%1E%8F7I%26%22%CC0XfN%ADni%D7%7E%90%7E%F1%FC%EC%27L%A6%D8%D8%F0%C8%00%F6%1A%9D%29%E4%D8%7Br%1BFx%21%C1uj4%99%A0%C2V%13%02%E1%DAP%B9%DC%97%15%AD@%FE%FE%CF%23%8B%85%AF%1F%FCw2/59%C7%19%C1%C2%CB%09%B3D%E0%AA%60_v%EE%8B%CB%02/%CA%89%EA%F2%C1%D0%D083%DA%ED%29%B0%90%1D%5E%5C%F6%DEP.k%BF%FB%DA%88%10%BA%60%A0%A8%C3%CCei%E5%A9T%28%A2%20N%B5%A7%D2%D2%1D%BCUV%E0%9A%85%06%9Amh%E1%3A%DC%3A%09%FF%3F2b%0Cq%E8%FA%955L%DD%EDQ%DDs%95%1E%A4%939%EER%F9%BB%F4%AC%1A%D2%00m%16%99%5DY%06%8D%FB%05-i%F8%1E%8E%8B%04%82%C9%DB%F2O%CE%DB%FC%C8%12%11%DBV%C2%14%CA%9A%8C%3DK%DC%9Do%5CD%02%C1%C1%D5%F1S%ADF%0C%F2%F1w%872%28%CAl%CA%A7%CC%E6%2C%19%21%FE%F9%BE%92%C2%D1_.%5EN%8F%A6%A0%CD%3Dx%FD%8AS%EF%A8%8C%20%10k%C4%B8F%1B%3A%02%9Ez%1E%87%17%06q%C4%CFsw%EF%98%173J%1C%A1%F0%13%F1y%BCL%3F%B14%0D%8CF%EC%C1%BF%D2%AE%BEc%95%D7%20%BA%85u%91%F2%C23%BB%3ER%B5%B7%AF%8E%0E%0C%0A%7B%26n%B2M%8F%06%5E%BA%F37k%21%C0%EF%0B%F3N%A4Z%A3%14%EB%28%A3%CAO%22%BD%8C%10Jb%8F%81QB%8C%02%F1%B6A%BF%16D%26%23C%C2%26%A4%1C%3DT%9E2%E7%11%21%5B%09A%DE%FE%C9%99%9C%EF%96%17%EC%8B%87tM%CB%FA%A2q%DA%E0%A1a2BL_%0B%E6%E7%24B%91oO3%862%9B%A5%F6%A3%88f%ADF%C4L%28%3B%8D%8F%88%B8%DE%A8Q%C7r%AF%25%11%0A%15%ECD/%D3K%1C%CCu%B3%C0%0B%F6%C6%A1%FDF%03E%BDbWiX%E1%04%CC9%D2%F3%8E%8C%DF%3A%85%11%3B%DC%BD%B5%80%03%85%9C%A3%7B%82+%8Ei%18%A7q%DC%07%29%20Z%D9%96%7Fr.3%0FJ%97%EB%93%E3%26%8A%FFu%B9h%13B%A8%D3%3D%E0%C0h%C9a%84%F0%CDN%92%C7C%85%D0X%88%85%C2%87%D3.%E4O%D8%B2%60%A9%84%9B%27%AB%E2%13%24%DB%0B%F2Vu0%FF%E5%16%B4%249%8C%3B%9A%85%97L%C8%E7%1F%D7%ACx%FF.%17%143%21%BF%CACI%B1%11%068%C0%3A%21%EE%CD%B2%02%17%D1%9A%8C%3D%BA%26%8D%E66x%1E%24B%D1%F2%3Au%DB%10%10P%B1%E7A%FE%E5T%95%8DE%3D%AC%7B%AE%D2%93t%B2%B8R%FE%AE%3E%EB%D6%D3%D9%F0%EB%238O%B3%E2%3D%7B%21%C9%BA%D4%82%BC%3F%B1%C20x/%C0%90B%1A%3C%11%EA%8E%A9S%01%5C%E3%FF%F7%BC%13z%3De%FC3g%F4%9E%22O%DFP%90Y%5E%1A%CF%1A%3Bg%DF%D1%D7g%3CD%B7a%EB%B3%BE%D6%93%26%AANK%92%BB8%1F%7BDD%D5%A1%85l%D5%B5W6j%D4%A3%E1a%FF%96%7B%FC%03%EEz1%E8%0D%1D%B8Vb%FD%1F%D6%93%3D0%60p%F4%AF%A7%26%DA%5C%83%F1%D7%A3%AB%CD%8Dt%94z%90%E7s%C3T%99%CC%E6Z%BE@%60%F3%1D0J0%AAk%D5%B5%9F%84J7%E1%D0__%18%13%1A%F1%C0%88%E0%D0gv%14%9E%DD%C1VV0h%EB%A6%CF%0E%DC%98%7D%98%16%7FD%05%04%26%9C%AE%A9%FC%84%C7%E3M%F6%93H%FE%3D%C8/%60s%BB%91%3C%CE%5E%D7%1D%B1%19o%1B%F4rwT%AC%B1a%91%BA%AB%CD%8D%F0%A2d%F8I%A4%AB%A0%82p%3F%DFY%98OZ%2C%E8%DB%8Ez%3E%96%D5%9B%60%1E1%A3%A7%F7wt%CF%7D%97.h%8D%26%D3%FF%D8%3F%1FL%9A%9F%AA%A9%AC%7Fn%E2O%A3J%A8%13%FBJ%0A%E3%60%A2%B83%D1K%98L%01%8B%C1%A1%C1%5D%CE%A4%191%8DA%DA%F6%82%DC%A5o%25%FD%CCj%C9%60%94%B6%F5tvRG%D7%F2%04P%17%0D%145%C3%DE%05%85%98%D1%B4%27%E6%C7%EC%85%01%F6%7C_Z%A2%B9m%D0%5B%27%C4%BDUV%D0%F8%BC%7E%F0%DF%B0%1E%EA%1B%CB%EAMt%03%0E%F3%9B%FF--i%7D9a%96%CD%B9%02%1E%CFc%3D%EB%AEpg%3A%BDU%FEmz%DD%7E%84%D0%CAN%DA%8E%A2%5Bz%1D%ACC%92%B1%07Bdr%E3m%83%DE%23%A1%F9%EC%EB%14%18%9D%AB%CD%8D%12%FBy%7B-i%D8UT%7Fc%DC%BC%98Qt%C7%08%3CTmz%5D%97%EF%28%D4%BD%D7%0F%EE%27I%13%F5%96%A7%96%1A%D9%D3aAG*%FC%D6%A4%17%9D%3B%092%7B0R%D3%B2%3E/T%B6k%A3%7E%3Ej%9C%CDyp%7C%E1%C8%B1%D1lO%87%F5%B3%96%B54%91mz%FD%8F%03%FD%FC%3F-%98%FF%0A%FD0%10%B3qN%F4%08%FA%3C%E8U%06%FA%C8%0E%AB%0D%FAi%DC%80%C2%60%C4Z%DA%B5o%80@%84q%91%04o/%C8%DD%01%E2%8E%A5%F9%7B%D0%B6%FC%936%C6l%CD%E4%19%C1%A3%BE%DF%A2%9E%189h%DC%D1%A4_Z%87%E3%604%C3%E5%BEC%E0%EFReS%9F%5D%E4%01%15%C3%DE%85y%BA%A6%D2B%9AL%7F%F4%E6%3D%0B%EA%7E%949%12%C4%C0%3C%9E%3C%FD%DDS%B9%B5Us%D9%1E%1C%E4%FB%98%D0%08%5DQ%FD%8D%D9%9D%F5%CE%AE%29%9BH%A3%C9%F4%12%C7%88%B1%AC%3BY%5D%B1%F2-%CE+%01%D7%F4%15K4%9E%EA%85%A2%3B.%BA%E6%E2%86%BA%10%AE%8A%F47%D3%92%A4%7F%CF%3ByD%9E%BE%A1DK%1A%FE%C6%C8%B7%3D6%C9%DEQ%90%01%96%935%15%EA%DB%06%BD%F5%7Fo%95%D5%8E%0Byz-I%EEg%8D%03%7B%3D%9F%DD%EB%5B*U%CA%20%AE%87E%C0%E7%F7%9A%21s%25%9D%BDU%FE%F6s%94%CCh/%8A%23u%EFq%60%E9%9E%60_%A7%C0%90%89%04%82z%A3%C9%B4%0E%E6T9D%D5%DEj%05u%06m%C8%C0@9%F3%8E%AE%CF%3A%A0%F7%A6%11C%9D%192%18%19%25f%FF%E3xqC%5D%12%BC%14%B1%E1%91V%C1%05%0C%C9%83%7D%E4%9F%C1%BCSt%60p%1Ck%C4%E0%F8%B1%CA%EB%20%B9%7F%EFX%D2%F3w%AD%DDj7%1A%A7%D9%5CC%26%A7%85%13%1A%92%B46i%20%DC%90%8B%C5%13%C1%18%167%DC%2C%9A%173*%CE@Q%D3%11%E3%F2%04c%96r%F4%E0.%90%FE%B3s%01%7F%9A%F7%A8%7C%D3%89%AC+%8B%F2%D2%DF%86%91%17%B8%25%9B%B4%EAm%BF%9A%3C%FDN%21%F1%F9%D7%DD%91Y%EEjh/7%D6%81%DF%B9%88%91%BE%92ar%85UT%02%E95%5B%2CfO%ADcb%24%DC6sv%D0%91%90%8AD-%ED%CFlt%F8%02kI%F2%F4m%83%1E%A4%A7%D6%5E%DC%D8%D0p%FF%A2%FA%1B%9D%BE%80%A4%89%22%1C%8D*%A1%A1%F0%FDjCMqC%DD%10%EE%A4%B9%27%7B%A1%80%9E2n%DB%96%7F%E2%AD%CF%17%3Dm%CDo0%2C%D3%07%0F%25%CE%D4V%C5%EF+%29%DC%D6%A8Q%7F%C6KM%FE3%13%EC%D9%ED%06%AD+a%C0-%9D%CEZ0%DE%2C+%A6G%FE%B2%FDq9%21n%D1%90d%C7%0B%3F%BD%8C+%E9%EC%CD%F2g%E4%F7%A0%5E%7CQF%10%BAa%01%C1%01%DC%BA%1F%EA%86%AD%AE%9CL%C7%5Du%0A%E6%B0%9F%1A7%11%16xo%B0%3F%DF%3E%5D%CE%BC%A3%AD%BAv%897%8D%18%EAJ%B5%08%A3%A0%99%C7%BE%BCR%A9R%8Ef%8D%15%8C%A42%CB%AF5%E6%CE%7Dq/D%F5xv%D6%5C%FA8%A8y%9A%DB5%FFw%EA%A15%1D%06%F7%E5%AA%07%29%B3%B9%92%91%D87%B2%C2%12P%03%9D%A9%AD%84L%D6%9B%2Cf%3D%08%3D%122%3F%23g%0C%19%26%82%11%16%18%B2%9F%8C%D9%A1%DD/%25%CC%14%B2%C1%85%93%13%E7%FA%9C%A9%AD%DA%BA8%EF%AB%ADPH%EB%A6%DF%99%82%F8%2C%FF%A4q%88%7F%E0o%BA%9D1%7C%BE%AEQ%A3%B6%99%27%EBIC%DB%A6%D7%C5%DA%CF%B5%E9%29J%CD%CC%B5E%85+%14-%DC%D0%5B%60%C8d%84%B8%AC%BB%E9%ED%06q%83%FD%03%EA%B9%F7%84u%2C%84@%D8%B1%AE%1D%A1%EA2e%93%C9%FE%A0%8C%20%24%8EO%EF%1A%3E%8F%DF%E6%C1gt%08%F4%8C%89%9Do%3F%B5%F6%BB%AF%A3%DF%9B%B3%90%60%CB%05%EA%0F4h%F3bFI%C1P%7C%7B%B9%E8%AD%93%D5%15o%F2R%93_v%B7%F8%C4I%11%04%FB%99W%CB%AA%B7%16%E3v%97%9E%A6%B3%B7%CA%1F%E6%B4%85%7C%FEW%B3%87%0E%A7%05%5D%C3%02%83%7B%FC%DE%B8%81%BB%EA%D4%B0n%A8t%09%81@%DA%8Bi%EF%90.%5D%04%A7%1EZ3%06%D6%90%1D%AB%BC%FE%F8%10%FF@m%AB%AE%5D%3F%228t%0E%8Cz%22%15%FE%83%A0%12@%E3%5B%DB%D6z%FC%C4%83%BF%EA%D0%88%C15Xc%08%95%85%10%0A%E8%D9O%18A%3Ds%E1_%5B%D9%F3%F4%94q%5C%84%C2%0F%7C+%D7%E0%1E%94%D9%5C%1B%1D%18%1C%7D%B1%FE%E6%D3%08%21z%94%07%C6%0C%A4%FF_%9E%3B%7D%1E%D6%95%B1%B2c%7B%B7%0D%CC%CF%89%85%C230%BA%ECn%C6%88%85%A2%AB%C5%0D7%E3%B9%D7%1C%1D%1A%EES%A1R.vV%B9xg%ED%8F%C0%10%26W%D8hP%ABZ%5BB%98%08%02q%1D%7F%1B%E3%09%C8%E7%3E%18%03s*%AB%BF%DD%FD%DA%DC%E8%91%88Y%3Fc%BD%13%BC%D0%20%96%98%3F%7C%0Cz7%EB%C0%17%8C%7C%DD%DD%02%94%FB.D%D5%BD%82%B7%CB%9Fq%23%EE%FF%CD%B4%24%9B%F6%09%DA%C0%0A%95%D2F%F6%DF%95%DB%D9%5D%E8%8CF%9BeE%DCe%1C%5D%E1I%E5%A1+8%95%28f%0B%15%1B%23%05*%C5%C4%A8%3Bz%0F%10%27%80%ABq%E1%99%5D%A5%94%D9t%CA%D1%96+%B0%98%9A5d%60%60%82e%F2%8D%ECg%20%97%87%01%1BT%28%9D%D1%18S%D6%D2%24%A7L%E6%E0%C2%FA%1BE%12%A1P%0F%95%0B%F6C%E3%5E%8F%91%FE%87%D0%5B%BC%94%5D%7Dn%FE%F0%D1%22%AE%22%09F%88%15*eQ%EE%DC%B5%9D%A9%C3%3A%C4%7E%A2%13%98%181P%9CU%7E%ED%17%DD%98%04%5E%3Cc%C80%1E%F7%00%B8Te%04Q%A9Y%F1%3E%2C%98%AEnP%ABm%DC%21%90%07%EDFrDO%D2%EC%24E%B5%B7Zm%82/%83k%814Q%03%3A%F9z%D4%F0%E0P%81%FDA-I%EA%1D%9F%DE3z%A2%0AE%1Cw%89%B3@%B4%06h%CC%B2*%AE%A5%1C%AF._64%20%C8%C8%D9%9A%87%06%DC%3E%10%28z%DD%81o%B7%F1R%93%3D%3Ao%D6%09%7D%B6%AC%EEe%BCY%FEb%A1%F0%F3%95%13%13l%B6%ADz7%EB%80%BE%5C%A5%04q%CE%11%A6C%1B%15%1D%18%FC%D8%BC%98Q%01%5D%5E%D0E%A0%03%C5KM%B6is%C0%90%ED%BDt%01%C2%EE%FD%C5%C9%AB%F7%B9%F0m%3D%B6%AE%20%D2%80%D0.P0%3C%C4+%94%88%84%1F%FCj%F2%F4%E8%8C+%C5%23%17%E5%A5%97pU%82w%E6%D2%82h%B7%22%9C%AF%A3%8CW%B9%F1%12U%3A%AD%D5%90%E9%29%E3%B0F%B5%BAn%E9%D8%09%D1%95%AD-%ED%3E%22%D1E%84PxG%E9%00%A3%09%5B%BC%E4%DF%A8%5E%BF%FF%CA%C5%85ar_%93%9644%83%90%24w%EE%DAN%F7L%EB%82%8C%EC%CA%B2%AD%A0%84b%25%FF%60%28%A5%22%91%C2%99%B5%14%D0%B8Bx%96%F9%C3%C7%D8%F4%7E%0E%5E%BB%AC%D5%92%24L*%D3%92%5E%5Ej2%C1%5Dg%06%BFy%88%C7%F7%94%E8%81%898%82%B8%F7%84%8E%82%CEh%0C%E2.%D2%E6B%08%84%23%7C%C5%12%1Bw%C8%B9%9B%B5jW*%B4%BD%CB%15%EAEW%AAPh%C4%5Bu%ED%83%1C%A4o%5Bt%60%90%9E%3B/%D4%15%CC%1C%24%C8%E0%D7%5DW6-%AEjm%F9p_I%A1%FF%C6%B9%8FJ%B9%F9%02a%B5n%B4%DD%8A%EB%CE%FAAw%D1W%CA%EA%7E%C4%1B%E5%CFt%B0%12%E6%C5%FC%B4%86x%5B%FEI%B2%5C%A5%3C%C6%0D%A1%C5%2C%C5x%CC%5B%D9%0C%D3%26%95*%A5%94u%27B%3BN%99%CD%3E%9E%9A%17%F6%06%7CW%EE%01%0D%3C%C4%CC%8B%0E%0An.oi%26%DE%C9%FCo%05%F4dZu%ED%8B%B9%E7U%B7%B6%BC%CD%AA%A8%604%06b%10%EE%E7%A12E%1E%BBhNN%88%C3%20%CE%E2%0F%E5%A5%BF%1D%16%104%DFl%B1%84v%95%0E0%8A%60%D0.-x-%22+q%F5@%98%5B%EBj%E3%CF%AE%80%8AN%08%84%7Bv%14%9E%B5%D9g%06%16T%0A%F9%FC%BFw5%0A%10%09%04%E9%13%C2%07%98%B9%13%BAL%88%25%3EW%3D%E6%27%91%1E/%B6%5B%08%3Ec%C8Ph%90%DE%ECn%9A%1B5%B7%9D%EA%988%BA%E7%A4%C8A%DA%8EF%9Af%8By1%F79%C0%E8T%B7%B6%10%3Dm%DC%A1%23%10%A9%F0Ss%0D%19%E4%0D%8CT%B9%E7%99%CCf%8A%FB%3F%BCx%B0%BE%8F%9B%F7%20%E5%97%11%C4%12%08%EB%D5%93%B4%C0%8B%0B%9D%12%F2%B9%0F%22o%B4%DD%FA%E6%D3%DC%E361t%86%06%04Q%9D%04%8A%F58%BD%5DV%CE%E2l%DD%EBk%F4%A4%FC%BB%F1%ACq%10%FC%80%BB%F8%BF%BAU%D5f4%99%FE%D2%9B%06%83%CF%E3g%80g%88%05%D2%D7Y%9D%BA%17p%C9%90%21f%04Q%7B%ABUtv%DE%CB%83e%04q%C3%5E%D8%00.%C8%A9%83%86%06%B3si%D5%B7TW%ED%A3%D1%07%F9%C86%B3q%17%21%2C%94%81%A2%A6%C2%88%0E%E6%B6%FC%C4%92%81%8Eb2z%03%D2D%FD%F1H%D9U%0B%F7%FE0*%9B%3Dt%B8%0F%21%10%96%3AZ%D4%0A%8D%2C%2CL%0D%93+%1ELN%9Ag%5D%17%02%0D%CA%A7y%C7u%94%D9%FCGn%25n%D3%EB%D2%D2.%E4%DB%B8%7D%9E%9B%98@%20dY%0A%8B/%1D%19LP@A%03nw8%C7%7E%27n%98%D3%23%04%C25%F6%DFwt%CF%27%C7%C7%CB%20%18-%E3%D3%E7%DE+%0D%02%1D%DB%EF%C5%C6%E3%F1%BA%8C%10%3F%D0%CF_%07%B1%ED%EC%0C%8F%3F%04l%5D%16%1BoSQ%FEUR%A8gG%AA%2C%26%8B%85%B2%BB%24zt%D48%83D%28%CA%87%BC%11%EF%7C%A7a%A0%9F%FFS%B0%B8z%CB%E9c%9D%25%85%BDwJ%17%0B%913%D4%A4%C1%CC%3D%C0%E4i%AF%CDgy%AB%AC%5C%C4%E9%BA%D7%9B%B8%A9%FC%5Dz%D6H_%3F%3E%D70%D2%ED%85@W%24j%B8%00%00%08%5CIDAT%B8%C6%9B%22%0A%D2D%7D%B9%AF%A4%88%E4%EE%05%B9z%D2T%19%21%10@%14%98%0E%8D%19%D3%EE%AC%B3%AFw%7D%81%1E%F7%A2%14bI.l%AE%09%BE_%91@0%1B%D6%93IE%A210B%93%8AD%E5p%CE%21s%8D%7F%A3F%FD*%BBP%1A%E6%D2%20%E0%B0%FD%B5%D8%C8%1C%8B%C7%C4%86%C1%C2%D8%8B%F57%7F%0B%C2%0E%98%FF%1A%1B%1AA%07Be%83%09%7B%13%C6%F5%F7%12L%FAr7%D6%84%B5u%10s2%EDB%FE%11%E9%AE%F5%D6%8D5%21%DC%8CH%20x%88%BB%B1%26b%8C%D8%1B%87%F6%93%8D%1Au%B6%BD%2C%15z%83%D2%5D%EB%DFJ/%3A7%82%1B%1C%F9%95%A9%89%E2%AD%A7%B3A%0EK%FB%F3%99%D3%A3%14b%F1lB%20%08%27M%26%B1%5D%E4%89j%A6%E7m%E5%F1%B1q%E2%CC%F2%D2%27%C4%3B%DF%81%CA%CB.AHstO%E8%C5%C3h%F3%D3%BC%13%B9%BC%D4d%3A%EC%11DL%88T%F8E%BC%3Fw%A1u%B4%03%23%E7%7D%25%85%06%D2d%B2Yp%E2%08p%D3%7C%7C%22sIYK%F3b%5Ej%F2%97%E8%8E%5B%E3W%D3%06G%09%B9%F3%11%D0Q%28ki%B6%D8%AFs%D2%19%8D%97sk%ABb%B9%23%0CXC8%3C%28dD%93F%BD%81%8D/%08%F3%A1N%C6%F5%DB%10.%F7%7D%0D%1A%8F@%A9%CF%15%95%AE%BD%8C%99%A3%A0%F3V%24%10%2C%5B6%3E%DEf%A1%28D%93%E7%9C%E3u%BCUV.%D2%9D%BA%D7%9B.Nw%94%BF%D3%CF%0A%DF%03a%17%BC%FFl%5B%F0%C2%03%D3%83%CE%DD%A8If%0Cj%91%90%CF_%03%7B5r%CB%0D%98%3Cp%88%B4%B6%AD%15%E6%E7%BEq%B7%CB%0F%E6%C9%24%BB%DE%29%DC%96%7Fr%227%0A%CC%96%05K%C5%EB%B3%0E%7C%24%DD%B5%FE%8F%B0%BB%06g%BE%3ANF%10%89%22%81@%EA+%96%F0%5B%DA%B5%F3%DD%95%16w%D1cC%06%AE%BB%99%C7%BE%5C%14%1D%18%3C%9AY%A0%1C%07%05%F6a%CE%0Fm%23C%C2h%21%C7G%C7%7F%C8xr%DCD%3A%26%20%0CeE%02%C1%AE%8E6%BA%F4%95%88%FF%9BY%5E%FA%3C4p1A%21%09%C3%FF%B3%B9U%2C%10%CA%D7M%7F%10%BD%7F%EC0%8A%0A%08%DC%DF%1B%19%04%0D%09%CCS%BC%7E%F0%DF%9F%AF%8A%9F*f%5D%A4%F0%7B%5E%CCH%A2%B8%A1nD%A5JI%AF%BF%60%83%FA%DA%AF%FB%D9t%22S%D7%AC%D5%14%83_%DC%D1%3D%F4%94q%D9%DEK%17%CE%84%CA%15%D6xz%CC%5Eo%A0%26%F2%E3%AE%EF%60%03%96.%D8%F1%99%7D%3A%AB%E5%E9%1B.g%5C%29%8Eg%D3%08%E9%D8%FD%E4s%A2%CC%F2k%CB%A1l%0E%5E%BFb%DD%C9%B6%93%7BJ%B2%CAKW%22%07J*x%96%0Fs%7EP%93%26%D3vgTw%1B%B3%0F%A1%3F%CF_%24%81%06%21%B7%B6%EA5n%FA%B9%D7%DCp%F4%80%912%9B_%B6%7FY%A1%E7x%E8%FA%95%C7%9F%89%7B%C0%26%F8%A8%BD%11%EC%28r%BA%23%B6%3F%BE%C2%1F%F2%A2B%D52%A6R%A5%1C%A3%25%0D%8B%10%E3%5E%01%A3%C8%96%1D%9C%B3%E1%E8%01R*%14mo%7F%D6%F1%9A-o%E1%8D%B2r%85%EE%D6%BD%DE%CCKW%CB%BF%3B%CF%CA%18%8C%7C%D8%8D%80%DBI%CDxf%0D%18%BE%A4%26%8D%3A%89+%80%E3%86%21%7Bn%E2%14%89%AFX2%FA%EB%E2%827%98H/n-C%03E%3D%7C%BA%A6%AAT%C0%3B%16%06%1Ds%C4%18%B3%F4%A7VJ%8A%1B%EA%24%97%1An%BE%C6%9E%CB%0D%A4%BC%BD%20%AF%F5_%25%85%EEL%8A%5Bp%C9%AF%0D%D2%FC%09%87%FE%DA%3C%3E%2C%92v%1D%5En%AAW%8D%0C%09%8Bg%8D%15%0F%F1%26A%A3%05%85%7B%B8%EC%CA%8Fg%E7%BD%DC%A1%3C%1F%E6%B8%A6e%7D%F1%E8%F4%C1C%C3%A0%82L%1B%3C%D4%1F%0A%1D%1AA%D2DU%B8%B2%D3%B3%AB0%C6%AC%3A%EDB%FE%D79Ue%3E%CB%C6%C7+X%C9%3F%FCv%B4%1D%044%24P9%B3*%AE%C1%BF%1Fw%16%81%1C%04%0E%BC%D4%E4%E9%7F%3Ds%FC%D4%E9%9AJ%E2%B9%89S%E8%00%A2%F0%FC%DC%CA%CD%BD%B6%23%B4%A4%E1%F9%ED%05%B9g%10BRnd%07%F6%EF%BC%1F%AB%AD%3B%D9v%E7%9El%A81pG%90%26j%8B%B3%D1%D4+U-%E8%99%7D%3B%8D%EF%CDY%28r%F4%1C%60%84%C0%88%19%28%EA%AB%0E%16N%E7%C8%D3%DF%3D%F1%C6%A1%FD%89%8E%22iC%9A%BE%3Cw%1A%FE%5C%0D%11%D1%9DI%13+%9C%80z%E9%28z%3Ab%3A%5D%10%CB%10%22H%18%9E%FB%D3K%CE%5C%D7%93x%A3%AC%5C%A5%3Bu%AF7qG%F9w%E7Y%0D%14%B5%16%3A%212Bl%13%14%9C%EDt@Y%A5%5D%C83X%10R%C1%DA.ny%C2%F9%99%E5%A5%3An%A4%17w%C1%08%89F%9D%AA%A9%CC/U6%0EZ%1D%3FU%CA%B6c%1D%E5%0D%B4%3BU*%25%E1%F6%C4%B8%01%97%27h/%3E%F2%EA%5D%9B%5C%22%26D%D4%A8%900%3Az4l%93%10%E5%1F%F4%0BX%5C%1D%E5%1F8%BA%AC%A5%D9%18%AE%F0%7D%D3%3E%FE%E1%20%3F%FF%27R%8E%1E%CA%FE%DD%AC9B%A8l%F0R%FE%F3%FC%19%15%AC%5B%F3Z%8Et%00%23%5B%1Du%5D%D9%B4%0A%F6%13%83%ADXF%87%84%E9G%04%87I%D8%8D%E8%10gc%3E%21%9FOo%CC%C7%B8%05%BA%EC%852%8D%D5%C0%B37j%D6%15%D6%DF%F8%03%04%0D%B5%DF%7C%EF%BA%B2%91%96%ED%C2%B5%11B%BB%3B%B8%C6%F4%BD%97.%ECH%BB%9072%3Er%B0%98%BBi%A0J%D7.%ED%EC%9EAR%99%7E%5CX%84%BF%A3%CD%1Ae%04%91E%9A%A8%0F%BA%DB%BB7P%D4S%29G%0F%7E%29%11%0Ae%EC%06%88p%DD%E3Ue%10%D9_k%A0%A85%0EBXY%D1%92%E4%93%A4%C9%94%BE%E2%9B%1Ds%12%A3b%C4%906%F6%FB%EDF%23%F8%13%9Ff%CA%26%15%5C%8C%2C%F6%F3%18%88%89%F8%BD%26c%0F%DD%FD%8C%09%0CF%03%7C%FDm%02%17%83%5B%FCrS%DDm%A3%C9l%D0S%C67%DD%B1%7E%0C%D6%E7pwu%B0/%03gqwY%D9%A7%CB%D9gp%94%AF%A8%07u%8F%9Ew%E6%94%977%D2%E9%AE%F2%EF%CE%B3%B2%E7%A6%5D%C8%3F%FC%CD%A5%0B%F6%9B%80%1AD%02%E1e%D2dz%03%DCx%FBJ%8A%0E%1F%AF.%F7e7%9F%05n%E9u6s%C9%CE%E4%9B%B3y%CBx@F%82%F8%EA/%27%8F%7El%B2%98%15%A3%82%C3l%F6%0Dd%D6%08%AB%ABZ%5B%E8%0D%8E%8D%26S%96%FD%A8%BA%3Be%E4%29x%16%8B%C5%23%97%06%C9%FD%F4%C1%C3%B6B%A6@%03%B3%3B%FE%09%1E%CCy5k4O%3C%3Aj%9C%1F%F4D%8A%17%BC%CA%B3%FF%1E%18%C0%B2%96%A6O%F8%3C%9EP%C8%17%B4%81%11%EB%CD%D1XG0%21g%A2%1C%28%DA%8A%98-%F6%5D%9AW%E9d+%7B%A7%26%EE%3B%D8%C6%1Du6O%D1%C1%3D%9D%DA%82%3D%F4%9B%3F%FD%EF%1B3%E7%D8%EC%FA%0B%EEO%CB%EAM%3C%CE%B5%B9y%E5%D4%D6%22%9C%B4E1%11%FF%D9%B4%E5%D8%ED5%E5h%E4Q%ED%A81%E2%94%9D%FD%B3V3%CF%EA%969%B1%8E%B6%81w%C7%5C%91+e%E5%CC%F6%F4%5D%9C%EB0_9%DF%E9%B4%EE9%A8%0B%0E%EF%EF%A9t%BA%B3%FC%BB%F3%9E%D9%3D%F7-%A6%0E%17%D9%9D%B3%D8A%A0%04%A7%F3%CD%D9%BC%ED%E6%B3%E40yyW%9D%EDN%19y%12%8F%1A%B2p%B9%EFVfx%0C%B2%D3%A7%99%88%1CC%06%F9%05%E4%D4%DD%BE%15%05%C6%CD%9B%0F%8B%F1%1C%5D%192%0C%06%83%F1%14.%CB%EF%3B%C2GD%EC%3F%5DSI%CB%A7A%89%08A%7CA%8A_%DD%DA%92A%9A%A80o%05%C9%C4%600%18%CC%FD%8D%C7%0C%19%B8%03%C3%E4%0AP%22Z%F7%0EK%8C%8AI%7Eq%CA%CC%B8%F9%C3GK%AB%5BU%8D%B8na0%18%0C%C6U%3C%BA%1A%1F%F6%07%9Bs%7C%3B%8C%CC%16%C6E%0C%A4%95V%A0%08*n%A8k%84%8D0q%E9a0%18%0C%C6U%3C%1EV%86%DD%EC%12D%1C%0D%9A%DB%11%E0r%CC%9D%FBb%9F%13o%60%5C%A7/%A8%970%18L%FF%C3k%F1%D1%EC%C3Ra%EE/%9A%B5%9A%FDY%15%D7Zq%B1b0%18o%E31%D5%22%06%83%C1%600%DE%C0cb%0F%0C%06%83%C1%60%3C%0EB%E8%FF%01%CE%3A%BBsd%98%7C%BB%00%00%00%00IEND%AEB%60%82") );

		// if ( ui_is_light ) {
		// 	_fl.add("image", undefined, unescape("%89PNG%0D%0A%1A%0A%00%00%00%0DIHDR%00%00%00@%00%00%00@%08%06%00%00%00%AAiq%DE%00%00%00%09pHYs%00%00%0B%12%00%00%0B%12%01%D2%DD%7E%FC%00%00%06%D1IDATx%9C%ED%5BOk%1BG%14%7F%DB%04%97%96%18%A9%B8%04%9A%8BU%0A%09%94%14+%E8%03H%3E%F5T%AAB%EF%DE%5Ct%B5%FA%09%A2%7C%828%D7%BDD%FE%00%A5%F2%B5%97%AE%3F%C0%92%D5%A5%87@%89%7C%E9%29%A6%12%81%94%04%C2%96%B7%FCF%3C%8Dfwg%B5%1A%C9M%FC%03c%EDjV3%EF%F7%FE%CC%9B7%B3%5E%92%24%F41%E3%93%8FZ%FAk%02%AE%09%A0%9BW%60%0C%99%F0%A2%A0IDu%22%EA%8861%11M%89h%92%B4z%93%CA%7D%5C%A5%20%08%81%BB%10%B8m%F1%C8%05%11%85Dt%92%B4z%F1J%7Dn%9B%00/%0A%1AD%D4%87%E0%FB%15%7E%EA%8C%88%FC%A4%D5%9B%96yhk.%E0E%01ky%60%A9i%1B%FC%08kh%96%1A%C7%A6-%00%1A%1F%AEQp%1DO%93V%AFo%3D%9EM%12%E0E%01k%FC%D1%06%BA%FA%DA6@n%C4%05%10%DCX%EB%07%9B%E8%0F%F1%E4%C4%A6%A1%F3%3C%C0%8B%02%1F%BE%B9%29%E1%09%04X%C1%A9%05@%F8g.%FB%C8@%C3%B6%A13%0B@%B0%B32C%07%B0%9EN%5D%BA%00%07%BC%9A%C3%DF_%0B%9C%10%E0E%01%A7%AFG%9B%17%A7%3C%5CY@%C7%A2%CD%95%80+%02Jec%DB%84+%02%EA%FF%0F%F1%3F%5C%0B8%B7m%F8%A1%16D%AC%97%C6%D7%04l%7B%00%8E0%B2%FDYW%A9p%EEJ%AC%7Ec%87%A6%EF%DF-%DC%EB%DF%FE%8EF%D3%09M%DE%BD%A6%E6%E7%7B%D4%B9u%87%EA7wh%F2%F65%0D/_%94%E9%FB%ACLQ%C4%15%01%A1%FA%C0%C2%D4o%7C%BA%F0e%FF%F6%7D%EA%FE%F5%FB%FC%DA%DF%BBK%F1%BF%97%E4%7Fy%97%FC%BD%7B%B4%BFs%8B%C6%7C%3D%09%29%7EsY%B6%EFR%E9%B7%13%02%B8%3E%E7E%C1%AC%B3%7B%A7%D6%AD7%E8%F8%F6%FD%85%EF%1FN%C2%85k%D6%7C%FC%ED%CF%A9%E0l%01l%1D%07%9F%ED%AD%D2%F5y%D2%EA%85%16%ED%E6p%19%04G%E1%EB%BFi%FA%FE%ED%FC%86%0F%C1u%F3%E7%EB%F8%CD%AB%F4%F3%F0%D5%8B%94%10J%5De%D1r%0A0%E3.%CA%0E%D2%29%01%FA%0D%D6.%A3%B1%B3%BB%D4%98%5D%80%D1%D9%FD*%FD%A3%94%98%B7K%EDr%D0_%A5L%EE%B4%24%E6E%C1%B4%B1%B3%5B%0B%EF%FD07%EF%D9%FBw%D4%FC%F3%D7%A5%B6%1C%18G%DF%7COm%08%7Fz%F9bn1%168MZ%BD%D2%DAO%C7%E8%98%00%0EH%C7%2C%1C%077%D6%28%9B%B7%EE%02%12%9D%DD%3Bi%E4W%D6b%01%8E%FA%D6%15%A0%A51%3A%26%80W%85%7F8%EB%80h%CC%9C%95%DD%0B%90p%5D%14u%B5%28%9Aa7hP%F5%87%5C%13%B0%B2ij8%13%F3%FBt%D5m0%13%0A%5D%00%85%CD%81%A8%B3%F1%7E%DC%B0%88%7DT%85%26k*%8B%B1%C6%1BUL%3D%0B%B9%D3%A0%17%05%5DTue%91%91%3F%3F%F2%A2%20F%E13%0B%DD5%D6%04k%AE%0A%ACEy@%9E%96%B9%CE%1Fc%D3c%01%B8We%C0ch%5D%E2%08Au%AD%C8%24%00%DA%D573.%B4k%D6L%28I%80%E9%0F+j%7F%94A%E0%10%BF%9F%0B%1E%8F-Yy%16%A0%9B%F7%C3%A4%D5%E3%7B%0F%A0%21%05%16%F4%B9%17%05C%C4%8B%D8@%9CI%A3E81%3C%B3%9Fg%95L%8E%17%05%9C%3D%3D%E7%E9%D7%8B%82%04%B9%C8J%04H%06/%92V%8F%B5J%88%C0%FC%DD%A9%D6%FE%C8%10/%08%C2%97%B5%88%10%01%CF%94%DD%1D%236%99%60%DAn%3F%06%29F%D8%AE%05%D2i%87%DD%C2%8B%82%3E%22%B2o%20A%C7%18%C1P%D7%DA%B8%E0%B9%14I%AB7%C2%14%A8c%A8%07%60%5C%1F%C3j%0Ey%87X%D4%06%DB%B0%CE%25%D8%120%05%EB/%89%E8%09L%BE%09%12%7E2%C4%06%C6SX%CA%89%A6%FD%0BC%C1D%7F%5E%CE%F3%BE%C1%15j%86%C5%96%B2%D8%18%84%BF%D4%DA%18%CF%0C%E4%11%20%E7%DC%06*%BDc%A1%91%D4%B7XK%226%1C%E2%EF%01%3A%1F%E1%E4%86%C4@%AB%1A%CFtB%E4%7C%8F%CF%26%93%3F%E0%B8%931%DE%AE%F6%9F%B2v%A7%F3%08%90%7E%D3%C0%20%7D%11%9D%DB%D2%0C%11%1B%26%D0%C4%08k%00%DD%1F%CF%F1%9D%8C%13%85Y%1D%8A%1C%0F%0D_%1D%09%D3%0EA%26%F7%F9%0F%EEM%8AJ%E4%99%04@%20e%9A%FB%E2%9E%C4%9C%00%C4%86%18%27@L%BB%B3*%1E%E8y%831@%21%DEp%9E%91%BA%1F%82%B0%29%E6%3C%C3%F7*h%AA1%9F%C2%DAr%B7%CA%CB%24B%03q%8CM%1F%EC%00%B1%C1%14%E9y@%8F%C5%AAM%7F%3E%CC%28%A2va%B6%FC%9B%BF%F1%BC%9E%13x%D3%29X%B8%E3%17%A2%3E%A0%94a%B4%84%5C%02%C0%BA%B4%82%E7%88%B4%0A%13%90%A2%9F%FBQB%1F%F2%80x%DD%20%FCz%21A%81y%9B%08P%02%A8%FE%FBho%22%A1%06KPmT_2F%18-%CDf5%D8%C5%C3%BAv%C7%5C%82%F2%A2@%8F%C6%BF%24%AD%9E1%F9@%16%27%83%91%0A%A8%A6E%CE%01%DC%C6%07%F1s%E2%98%04/%0A%C8%B0%05%FFD%1C%C9%D1%CF%1D%0E%C9%80%C2iP%24%3Er%AA%E2%CF%3E%82%A0%8C%F2O%B3%84%07t%F3W%E4-%C4%16%91ZOE%2C%AA%C9%94%1B%96%F0%D8%D0%C7%01%ACT%0A%FF8%AB%5Eh%95%07%F0%20%C4T%F7%00f%1Dk%E6%9C%16%29%D8WsV%89%BE%D6%DEH%80%2C%A4%C0%C2F%FA%7D%8Ck%60H%CDu%9C%E5-%CCJU%85A%84%1C%AC%24%E0%04%7F%3C%FD%8D%F4E%0B%B4%27%A7%C5%91%F2U%FC%97%16%D6%81P%ED%A2%9Df%8C%A9%89iR%12q%01%8B%EC%E6%D5%11%AAV%84%A4%A6%EB%C2U%0ED%3E%A0%A0kA%F7%C9X%98m%13A%AF%03%7F.%2C%7D%21%60%1B%FD%3C%0F%EB%DC%17%18a%E0j%10r%89%AC%9F%FE%3E3%EC%E0H%B2x%CA%0B1%7B%84e%8E%BD%95EU%02%A4%10%03X%81%0At%D2U%A4ff%19y%B9%24%A0%A6%D6%F3%88%EAUN%91%E7%A2*%01r%CD%DE%C6t%A5%A6%AF0C%80%13SD%86%9F%CA%F9%7D%20N%94%AB6%A5%F6%FDlP%89%00%0CZ%AF%BC%CC%B4s%FB%D2%7F%CF%0B%8A%A9%F2%BB6%02%AA%22%AFh%E9%BD%12%D6%B21%82iO%25%20%F3WY%0C%1B%23%87%F0g%1FE%8F%2522N%94%CF%10%17%D6%7E%F0%C2%F5%CE%90%14%863%C7%26%AA3*%20%B2E%2C%D5%EE%D4%96%1A.yV%E9%BA%10%9E%B1%C97F%D2%BC%80%05Fq%E5%B7%AC%97%26%F0%C2%83%F5K%0FU%E0%FA%90%94%D4%DA%3E%2C%822r%FF%AD%C0%F9%1B%23%BC%A6%CFyW%60%96%B4z%5B%3DT%B9%89cr%7EF%AE%3E%BB%0Ag%8A7%F6%CE%10%FC%5Ee%87%13%CC%02%95_%7C%AC%8A%EB%B7%C7%AF%C0%18%B6%07%22%FA%0Fq%19%CC9s%D40I%00%00%00%00IEND%AEB%60%82") );
		// 	_fl.add("image", undefined, unescape("%89PNG%0D%0A%1A%0A%00%00%00%0DIHDR%00%00%00%94%00%00%00%21%08%06%00%00%00%3F%3B%82%12%00%00%00%09pHYs%00%00%0B%12%00%00%0B%12%01%D2%DD%7E%FC%00%00%04%EDIDATx%9C%ED%5B%D1m*%3B%10u%9E%5E%03%BC%12H%09PB%F8%9D%BF%A4%04R%02%94%10J%80%12%E0%CF%BF%A4%84PB%28%E1RB%AEF%3A%1B%19s%EC%B5%8D%97%87%12%1F%09%A1%ECn%3C%3B%E3%E3%99%F1%8Cy%F8%FA%FA2%0D%0D%B5%F0O%B3dCM%FC%5B2%96%88%3C%19c%26%C6%98g%7C%FBX%EA%DF%D6%DAU%9B%AD%DF%85%AC%90%07%22%BD%05H%14%C2%B2%11%EB%F7%20%99P%22%A2DZ%14Z%E6%60%8Cy%B1%D6%1E%7F%BB%C1%7F%3A%92%08%25%22kc%CC%9C%DC%DA%E8%C7Z%7Bp%9E%5D%80x%23%EFY%25%D3%D4Z%7B%1A%CA%A6%90m%F0%AEcc%CC%BB%B5v6%94%BC%86K%F4%E6P%98%24F%A6%99%B5%F6%DD%BF%A8%E1MD%94h%7B/4%8Eqm%3A%E0%3CtDj%F8%9F%10%DD%E5%89%C88%10%E6%5E%18%99%3A%C0%0B%CD%E0%95%5CLD%84%91%B3%E1%87%20%1A%F2%02ySr%18%01y%D6%DE%E5%A3%B5%F61%F1%7FG%D8%04%B8P%B2%AE0%CE%0E%CF%7E%26z%A6Wk%ED%26%20o%811%7C%C2k8W9%BBX%0E%88%C5%F7%E9%5D%FE%DE%90@%9F%B9%E7%B5%97%B1q%03%F6%A3%3A%E0%FD%7D%5B%3DF%C6%7E%86%BE%21%FB%9EB%B6%8A%A1%AF%0E%C5%BCI%F2%8E%0D/%E4%E7Lc%EC%16%29%F4%1E%08%B2%26%CA%1A%87d%DB%1A%DE%CE%91%F7%16%D0w%82%7B%9F%C8%25Kd%EC%A1%8F%BF%3B%EE%C6%0D%DA%A36Dd%84%F7%D9%F6%D8w%ED%E4%A4%C9%08%12JD%26%24%B1%3E%C5B%5D%00%8C%E5%D4%80%20%C8%FEVyP%81%BC9%26%23G%C66%A4%AF%83%3D%EC%7D%0B%A4%BCO1bI9S%F0@%AE%F5%81%ED%EA.%26%10%06e%1E@%C3%CD%AA%DBI%EA%0A%F3CG%17BI%E8%0B%86%E7%88%3C7L%B1%BA%9Bz%B47k%ED2A%F7%A7%8C%C9%7BC%DE9%18%A0%8F%FF%3E%3B%E8%FC%1D%1A%9D%F0%9F%8D%18%A1%7C%EFdH%92%9D%02FBFV%E6%7E5%BFxq/%20%E1%AFQ%28e%F2%CE%8A%B0%EA%8DEd%86%DC%C8%B5%C7Bw%B2%09u%B5n%F26X%14G%E4Zk2%B1J%D4%89%5B%82%19%00%B4%AB%E1%EBqM%21%FA.zy%F0%16%BE%81%958%AF7%94wd%86%8C%1085%7F%D3%09%7B%ED%26M%BF%E15%19%19o%96K%0D%25%F3%5E%9A%C3L%A9%CD%80EP%26o%17y%9E%DDK%99%88Md%B5%B3%DCr%E8%DC%91%91X%93%EFu%AD%1C%EE%5E%08%C5%0C9d%9B%26+%9C%C3%BB%F8%E4N%99%80%98%0E%EC%DE%A0%84B%99%85%C9Uo%FB%21%22%1F%25%3B%3B%171B%25%25%D3%09%28M%EE%EF%86P%C0%85%3D%B0A%28%C5%60-%A8%1E%84%C2%AD%E9J%24%22%F2%A7%B4%24%13%23Tj2%DD%87Z%C9%7DC%05%20%87%7B%EC%8E%18%050%EABa%AE%C4%20%A1%B0%DB%F0W%D1%08%15%D6%1C0%A6%A7%D4%B2%86%AC%CB%94x%DF%8B%851@%8Ew%B3%85%A6%B9%9D%B5%F6%01%C4%0AE%8Cy%AE%A7%EA%CB%A1%AE%D9%DD%B8%ED%13%17GR%1C%BDu%3E%91E%28%846_%8Fk%B7%F7l%C1%14%11%CA%A9%CDe%03%C4%9A%A2i%CFt%AAJ%28%D6%3AyJ%F1RP%92%25x%8C%A4%CCc%3D_%99%A3%C4@%E5E%9Eg%F7r%3B%06%3E%D8.%D1%9F%D0T%E2o%AF%5D%80%1A%91@%2C%9F%D4Ys%10%25T%A4%06%B3%ED%E9%C7%8D%02-%8D%03k8%22%BC%FA%13%14%22d%0C%17%3B1F%CA%80%BCqd%87%C3%AE%A74N%E9%A2%C0%82du0%FF%9D%18%A1%E6%DD%16%1F%7D%C8%8F%CA%B5%24_fVX%EF-%1B%A0%8E%C2%8C%B7%F7%EB%17h%3C.PY%F6%5D%FA%B1%A7%B5%C0%92%C4%05N%3C%9CA%27D%AF%13%020R%AE%03%9E%8E%C9%3B%1BSuC%EF%CE_%18%AB%C4%D3%A7%13l%C7%BF%C3%06%C8%C4%92%5D%B6pY%08%1Aa%CC/%EF%CCY%AC%8E%D6%C9V%5B%A83X%B0%28%03%DD%FDy%EB%1D%D7%C5%5D%1D%01%0E%1C%D7%88%E1%ACU%02r%7FD%9E%3F%EB%ED%15%C8%BB%18%C3%19%8B%1D_I%C5E%8B%C9%197tZ%D6E%B78%A2%C7W%12%C7r%91%7D%CA6%B9%B0%89f%E8%AC%20%19%D5I%9F%A6%ACh%84%C3Yi%8D%06%A1%2C%B9%5DS%20o%93y%A4x%95%B0%C2%83dr%C6%88%D9n%A8%1F%81%BC%97%1C%D9%CE%AA%94k%8CG%E26%C3%AA%60%8A%9EpO%FBW%0F%B9%CAB%C6%7F%18%83%85%DA%A33%3E%EB%BDu%24I%92%EB%C9c%93%7F%C0%3D%5D%ED%B9%BD%C5%13%C8%F2B%C6%DE%C1k%C7%C8%D4U%E9%A7D%9F%1D%8Ea%E7%D8w%E9%7CB%24%5D%E1%BDf%25e%91%F6%CB%E1J%E8%3B%B1%F9%5B%D0%7E9%DCP%15%8DP%0DU%D1%08%D5P%15%8DP%0DU%D1%08%D5P%15m%97%D7P%0F%C6%98%BF*%A0f%23%2CT%03%E5%00%00%00%00IEND%AEB%60%82") );
		// } else {
		// 	_fl.add("image", undefined, unescape("%89PNG%0D%0A%1A%0A%00%00%00%0DIHDR%00%00%00@%00%00%00@%08%06%00%00%00%AAiq%DE%00%00%00%09pHYs%00%00%0B%12%00%00%0B%12%01%D2%DD%7E%FC%00%00%0F%12IDATx%9C%ED%5B%09p%1B%D5%19%7E%D2%EAZ%1D%96-%DF%96e+v%9C8%89%13%1B%C2%91%D0%A4%01%C2M%03%0E%8164%1C%99%A6C%29%D06%F4%A0%E9P%3A%E9Ih%29%F4%9A%942%0Dm%DAtH8%8A%03%09%04%12%8E%140%94%12%07%12%88%9D%D8%96%EF%DB%B2u%AE%B4%D2%EE%AA%F3-za%23%2Cc%C9%16dZ%FE%19%8F%A5%DD%B7%EF%BD%FF%FA%FE%E3%ADT%B1X%8C%FC%3F%93%FA%FF%9A%7BB%88%E64%D8%C3%A4tu%F7%BE%8D%F4%3E%A3R%0F%FC%D3q%C9%AE%99%9C%FF%B4r%010%3B%1E%8D%D4%0FD%B8%DA%7E%9E%B3%16%E9XU%81%8E%25%95%ACE%BE%1F%10%05%E2%0A%F9%89_%8C%8AfF3R%A27%EE%B5i%F5%3F%7D%D4%7EQW%BAk%7E%EA%02%00%D3%BD%E1%E0%1D-%9C%B7%C2%CChUK%AD%05d%91%C5F%16%99m%C4%C4%247%D0%A0%28%90F%EF%10y%C1%DD%27%D84%FA%D7%ED%06%E3%CD%E9%08%E2S%11%C0%F5%7D%07%CA%87%23%E1%DF%B4q%BE+J%F4F%DD%D1%C0%18%B9%A5%B4%9A%5Cl%B3%A75%DF%03%5DGIK%D0%1B%EA%A9YgL%F5%D9O%1C%04/%ED%DC%FB%E7%17%C7%FA%5D%C5%3A%B6%FE%D7s%CE%D5%0DGB%E4%BE%AAs%D2f%1E%F4%ED%F2%85%A4%DAde%97%B65%1CN%F5%D9OL%00%D7%F4%BC%F0%A5%AA%E6%9D%E3%ACZ%B3ak%F5%E7%D4%EB%8Ag%93%23%811%B2%D0l%23%15q%1F%9F%0EA%08oz%87%EB%B0N*%D3%7C%22Q%E0%F3%EDO%BF%D2%C7%07W%60%93Jf%8F%F8%C7%C8%0D%C5%B3%A7%3D%7F%C3p%17q%85%7C%B20%07xn%13%21d%CA%91%22%A3%02%80%AF%BF6%3E%D4%BC%22%A7%88%FDf%D9%022%14%09%9Dr%DF%CCh%26%05%BA%A9%10%C0%B0%BE%A0%5C%1E%89%CF%3Fh%FB%8F3%95%E73%E6%02%60%FE%B0%CF%FD%DE%A6Y%B5%AC%89%D1%92%1D%03m%E4%27%AES%5Dt%DD4%B5%8F%90%D80%DCy%F2%3B%84%E9%13%A2%D9%A9%CC%911%01%80%F9o%94-0%B7%87%7C%24%28F%E5k%F5%F9%E5%B2%B9%FE%A9%B7E%F6%FF%E9%D0s%EE%5EY%A8%F5%05%A7*%1C.%96%0A%0Ed%C4%05%80%F4W%E4%3B%CC%D4%DF%83%82%20o%14%1A%02%F3p%05%98k%BA%B4%7F%AC%8F%D8%F5Fry%C5%19%1F%99%01I%93_%8C%16Ou%EA%8C%08%60%24%12%BE%16a%0DLBK%17%E7%DAO%FA%FA%D7J%AB%A757%CC%7E%98%0FM+l*i%C6%05%F0%C5%DE%FD%CBr%B5z+%3E%EFw%F7%11%C4%F9B%1D%3B%EDy%21L%F8%3B%AC%07%D1d%A6h%C6%05%C0K%E2YK%B3%0B%E5%CF@g%8A%D0%E9%10e%9A%C8f%DFO%D6%15WN%1B8%13i%C6A%10%C5%0C5w0%00%7F%FD%C7@%5BZsa%1E0%0C%81.2%E7%907%3C%C3%1F%8B%1DG%02%E3D%AFf%DE%9E%EA%1A%19%C1%00%98%3C%F2%F3y%E6%1C%19%AC%A6%EB%AF%00S%98%3D%22%07%DCJ%89%29%13%D1c%A5%17%BF6%D5%B93%22%80%07%BA%DE%23%DF.%AF%99%11%DFW%12*D%FCMF%21I%F0%A42gF%F2%00%98%EBL3%3F%15%82%85%E4i%0D%9D%A9%3C%F3%3F%D5%12%03F%D8%B4%FA%7D%A9%3C3%E3%02%B0%1B%8C%07%26%BB%3F%11%88As%CA%3A%01%9Fq-%95l1%DE%20%91%F6%96_%FE%83T%F6%3B%E3%02%10c%B1W%12%8B%1E%24/%94%FE%D4%DB%7C%CA%BD7%BC%1F%20%3B%FE%00%9Cw%1E%7F3p%7BKc%CC%C5%F9I*%84%EEP%B51%FB%D5T%F7%3B%E3%20%08%04%9E%DF%F2X%D8%15%F2%1B%90%05v%87%03%81J6%EB%10%27%09%86%01%9E%5BpvV%BEY9%1E%A0%F6%FD%D6%B7%88N%CD%F4%14%E9%D8%5B%8Fs%DE%C6%F3s%8A%EF%A80Z%7E%3A%11%E0Q%0BB4PV%81%3B%06%DA%A4%95%B6%92%9BS%DDoF0%C0%AA%D1%B5%20La%83s%8C%D6%FB%FEUy%D5%F9%87%7C%A3%0F%F5%D5%DC%60%C9%D3%19%C2%CA%B1%18winiOK%D0%B3%E8%95%F1%01%1D%21d%FD%CB%15%AB%7Ev%D4%FFQ%F3%87K@%D3%24%EE%26%D4%D2%60Ugg%E5%FF2%9D%9E%60F%04P%AC7n9%E0%EE%93%3F%B7%87%7C%EF%C4/%AFW%1Dz8%7B%2C%CA%7B%13%C7%EB%D4%EA%BC%25%D6%822B%08%10%DC%B3%F8%C4%93k+%8CY%1F%99%17B%81U@%FBh%9CB%20p%A1%C1Hh0U%DF%A7%94%11%01%A0w%DF%E4w%87%11%0A%0Bt%EC%0F%E3%977%5E%92k%BF%7F%A5%AD%A40q%7C%9D%25%97%15c%B1%3DgZr%AB%CF%CF%29.%ED%0A%07%B6%27%8B%F7%98%13L%A3%7B%BC%7B%B8%8B%3C%D4%DB%2C%D5%98s%96%A4%BB%D7%8Cu%84%8A%F5%C6%7D%AE%90%BF%FE%0E%C7%FCs/%EB%7Cv%E4%C6%E2%D9%11%27k%29%99%A8%FF%07%A6%EEr.r%ECw%F7%3Dj%D2h%C8%ED%8E%F9I3%3Dh%1D%FD%05%00%EB%60%24%14%BB4%B7%F4%CB%D39%17%C8%98%00%AC%1A%DDN%17%E7%AB%87%A6%BEU%B6%20%EF%E3%C6S%CC%98%8C%90%E7%D3%06%C8%8F%5DM%12%98%9F%EEIQ%C6%04%A0Q%A9%FA%D2%7DV.%A2%DC%7D%A4%C2%F8%A1%B5%C0%FFq%7Ep%7BK%23%C9%D2h%3D%CB%B2%8Bn%9D%89c%B2%8C%09%C0+D%D6_h+9%F9%9D%FA%EDT%08%D6%00%90%7B%C33D%0E%8E%0F%86f%B1%96%B7%F0%D8%85%B6%92qX%D6L%9E%0FN*%0047%DA9%DF_YF%93%C3%A8T%3A5Q%0D%1B%19%CDcSA%5CW%C8%BFf%A3%02%C8%5C%9C%EF%A4%00%86%26i%92%D08%0F%AC%C0_+%E7%D3%14%E9%D9%1F%A6R%E1%A5BI%A3%00%BA%BA%C7%82%9E%97%BFQ%B6%A0%F2%EEYu%B6M%CEZ%F3%5D%CEE%15sM%D6M%B5%C7%9F%18%C1%FDd%CFBpN%83%F9dw61%A5%A5%21r%A2%7B0%7D%E5%B5%AF%3B%E6i%A1%84L0%0FJ*%80%CEP%A0%E1%BB%E5%0B5%89%9ABm%7FKiu%5EO8%D8%94L%08%87%FD%EEg%94%9D%1B%F8%EFB%CB%87%D6%D0%AEH%8D%13%13%9E%FE%08%C7%1F%F6%BBy%FA%1D%EB%3B%0C%E6J%E51%F9LRR%01%E8%D4%EA%D9%94y%DA%D9%A1%9A%81in%2C%AB%B1%B5r%BEc%89-h%9C%CF%AD%CA/%CBV%3E%DB0%D2E%CC%8CvJ%DB%0E%89%C2%A87%1AySYO%E0%F4%A8%95%F3%DD%3B%99%D5%29i%AA%E3@%13%0A%00L-%CE%CA3S%06%7E%ECj%1A%1C%E09%E7Kc%FD%DB%B6t%BE%1B%C0%E6%00T%9B%9C%B5%C6%BEp%F0%EF8%FA%C23+%3B%F6%BC%B9%C8l%ABSv%806%BB%9A%04%23%A3%91h%FC%87%10%CD%8A%18%9FX8%05Ea%04G%DD%7F%E9%3F%11%A0%D7%B0%D6%ED%8E%F9%06X%E5d%CC%5C%D6%F9%EC%BE%8D%23%AFsUFk%27r%8F%95%1D%7B%9EJK%00bL*%A6%1AD%EE%3D%CF%94%7D%1D%92%8D%E7%9DW%7E%B5Do%AC%D9%D2%F1n%00%89%086%B6%B9%F2L%ED%95%F9%8E%15F5%B3%F3%C6%E2%D9%E7*c%F9%D6%DEf%BE%DC%60%BE%BF%D6l%3B%B9%0E%0EF%94n%15P%94%C7%10%B6V%A5%F6b-3%A3%FD%03%C6R%82%00%21%DC+%BB%9E%BBw%A2%3D%C3E.%B0%15_Z%AC7%B2C%7C%88%7C%D5%3E7%EF%92%5C%7B%FD%B2%F6%DD%C7%26%B3%88%8FM%85%8F%07%BD%7E%8A%C0%D0%B2%18%8B9%CE%C8%CA%ADyb%A8%C3%05%B7%20%F1%8A%0E%3E%AFd%0C%A5mD%12wt%87%03%EB/%CA%FD%C0%22%A0%EDV%CE%27%D0%3C%9F%96%C1%94p%8A%C42%8C%DCAE%A49%ECw%F7%28-%04%C2%1D%8D%84%BF%03%90M%DC%A7%3B%CA%DF%83%B1/%B8%FB%1A%C6%05%7E%F9%AF%BB%8E%0E%C1%ED.%B4%95%CC%C3%BB%08i%0B@%A3R%8Da%C1e%ED%BB%DDN%D6%BC%B3+%14x%89%97%A4%25/W%AC%AA%7C%DB%3Bz%10%E7%7D%B4%A6%27q%13%87%9B%E8%D4%CC%16%22%9F%D4d%15%D1%BC%1E%DD%E1r%83%A9%8B%BA%03%18N%24%83%9Ay%8F%5E%AA4Z%96%FF%B1%A79%AA%1C%F2%3D%E7%22m%1B%E7%DB%A3%BC%06%ED/0%E5%D8%0E%B8%FBq%0E%B1%04%D1K%ABR%B7%1C%F6%BB%C3%08%BDBL%BA%28m%01%F0%92dB%AF%DF%27Dm%AF%8C%0Dxo*%A9%D2%0EGB%5Bq%0Fe%AE%C3%60Z%FEo%EF%F0%B6%DFu%BF%7F%F0%DE%8Ew%0FB%03p%93%B0%24V%0F%F0%A1%0D%F4%F8%1B%DA%19%8B%F2%ED%8CJ%AD%A3%96%82%08%A0S%AB9%BAVb%B7%08%AEP%A4g%EFR%B6%D5%E1v%1B%ECs%AD%C0%1B%E5X%D4%07%B8We%B4n%9C%C5ZDN%12%CE%1E%89%84%E4%DA%D9%A17%99%27%B2%9A%A4%02@_%9D%86%27%AF%10%C9%0BKbM%B1%9E%DD%D64gM6%0E*%CE%B1%E6%DB%28%FA%C3%3D%80%0D%10F%9E%CE%F0GO%94_%E8%E2%FC%AD%B5%16%5B%FD%7DUg%CB%9B%02c%F7w%1D%15*%8DY%EBY%86%C9%A1%EB%F4%F3%5C%24%16%8B%0D%D0%EFH%96%12iw%D9e%BF%19%88%84%1A%A8%BB%918%1E%D4Zl%E7%E2%0C%12%DF%9F%1E%E9%FEk+%E7%8B%A2%5D%3E%C0s%BF%8D%1F%BBK%C3%91%B0%E1CE%8AgMY%00%60%EAX%D0%23%D7%EDK%B3%3F%C8%DE%C0%24%915%19%96%7D%DE+D%D6%D2%F1%90.%92%23%00%21%12%27%00%23%8D%04%60%1E%1D%1F%BB%DE%B8%9DQ%A9z%A0%0D%FA%9C%3B%CA%FBL%8C%B6W%B96%18%C6%7F%20%F8E%1D%7Bz%21%E8%17g%7Da%F5%5B%DE%91fek%0D%F3%3B%0D%96%0D0%FF%D8%E2%5B%3C%D9Z%DD%DF%9E%1F%ED%8D%D6%17%94%17%9A%18m%0C%20Z%A0h%BE%24%3B%2CI%EA%02%F9%3A%C3%13%F0g%2C%D4%13%0E%AE%03%92b3%85%3A%83%0CvQI%925%89k%F0%B9%7B*%CE%C8S%02%21L%1E%A6%FB%8B%8Ew%BC%B5%96%DC%B5%10%A0O%88%DEJ%01%10%CCX5%BA%F7%27Z%1BL%01%C1%BFS%BE%D0%1E%8DI%DB%F1%FD%B5%CA%AB%E7%3F%3A%D8%7E%8A%10%00%8A%12%21%5B%B0%07%CC_a%B4T5z%86%EE%FCs%D1%0A%16%20%AAW3r6%8AH%93%2C%95N*%00L%F8%F8P%87%EC%9F%88%C1%EF%07%3C%9DR%2C%B6%13%E5%28%B4J%D1%BA%3B%1Cxds%C5%99%1AZ%BF%23t%DD%DD%F6%B6%F7%91%BE%13%079I%5C%0B%B7%A1%C5%CBX%94%BF%8C%02%22%5E%8F%81%CBh%D5%EAqe%EA%0Bf%03%A2%B0%B6%92%CD%92%E7ZS%E0%D4w%86%02w%E3%1E%84%F0%FB%EE%F7%03J%21%DCV%3AO%EF%17%22%3B%E1%0E%C0%0C%A5%05U%9B%B2%ADqe%0C%25%E3s%D2b%A8%CC%60%FE%CA%D6%DE%E6%EDX%04%FEL%09%9A%C5%0B%8AX%F4%BA%C2YF0%0F%8D%EF%1Ct%8Dfi%B4%AB%9B%E6%AC%99P%DA%8CJUF%05%D5%CAy%23/U%AC%DAuu%F7%3E%9C%E5%D7%E3Z%81%9E%25%7E.%8AD%A9%08X%13%89I%CB%FF1%D0%F6%EA%2C%D6%92%07%0B%04%83%0F%CE%5D%E2%F8y%C7%3B%8D%08o%B4%B8%C2%B1%D9%FE%B1%BE%0D%CB%DAw%9Fgb4%8D%3E%21%BAx%A5%ADd%0E%EE%03%3B%B24%DA%3D%13%ED%074i%14%80%E6%B4*%F5%CD%B7%B54%8Ax%B1%01%E1%EE%FB%AD%FF%21%23%D1%F06l%C6%1D%E5%AF%A7%1AE%E6%96%A3%D5%9D%95%CC%D4%E2%05%92%3C%18%16%E4%15%22%3D%24%01p%A9%FB%D4Yr%3D%25%06S%27%E6rGy/p%08%EE%83%7B%97%AB%CB%3D%B0%84%BD%23%DD%ED%CA%E8%00W%BD%7BV%DD%BC%AB%F2%CB7%FC%A8%E2%8C%BA%CFe%17%1A%B1%CE%B3%23%3D%01%8A_%29%0B%80%0Aa%895%BF2%24%09%DB%5E%F7%0C5T%9B%AC%CB1%A1%9C.%5B%F2%E4%17%13%21%E5l%8D%EE%1E%24I%C9%E6%19%E4C%3F%A3%09%11%B2%CBR%83%E9%0F%24%0E%B8%CAd%27%20%0A+%F0_%88IAX%98%8A%90Q%B8%83_%88.U%CEwh%CE%9A%D9%E3Bd%CB%E6%F6%A6%A8%D2%25N%BE%95%22%0A%E4W%9DG%A2%F3%CD9I%99%07M%A9%21%12%EF%B9%9D2%11%A2%C0%CAx%C3%E3Ew%FFh%91%9E%AD%A9%B5%E4%3E%B8%AC%7D%F7%98%C3%60%3A3%B1O%C7K%E2yT%C3%87%7C%A3%81%83%15W%9D%CC%CEb%84%20%C6%D9aM%7BGzrZ%82%1EF%ADR%CD%3E%C1%F9%AA%8Bt%EC%D1d%FDA%00%DD%F5%7D%07%1E%DA5%E8%DA%AEQ%A9%96%D6e%E5%CA9%06%0EU%5E%F5%0C%86%ABM%D9%EB%3F%AEy%92vG%08Q%00%D2%86%F6%CAX%F3%B1a%3EtS%3F%CF%85W%E5%97%D9%5Ep%F7%81%B9%D5t%2C%00%E9%9AB%A7%5C%0Eb%7C%2CF%0E%29%E7B%01%14%14%05%3B%18%95Hla@%14%1E%9Ek%B2%AE%AA1%E7%B8%BD%D1%C8%A4%EF%F2%C6%05%7D%3E%89%03h%3B%E7%93%DF*%3FV%FD%C5%29u%8D%A6%DD%12%03CfF%C3%AB%F5%EC%5D%27%82%DE%FA*c%D6%0A%1A%22I%BC4%0D%08%D1+%95X%81jO9%07%0E4%8F%04%C6%EA%00ZyZ%83%8De%98%87%1E%C8%3BO%EE%3A%5D%E0z%A6%7D%AA/T%D1%08%90%0AM%EB%5C%00%CC%83%B1%F7%02%E3%0B%8D%8C%E6%29%89%C4%0A%E0%AFJB%09%8B%F4%99%C4%FB%82%065%B3+%D1%3D%E2%85%8F%DC%04Q%02%1E%80%D3%AA%D1U%28%8B%A4%99%A6%B4%05%80%3E%DD%93%C3%9D%F2%A6/%CE%B5%17%05D%E18B%13%C2%17%E2%3Be%A0P%C7%D6%C1U%E2%9D%DE%A1d%88%DC%1F%0E%F6b%0C%04%CAK%E2%8D%B8%D6%1C%F4%3C%8E%F4%16QBY%24%CD%24%A5-%00%A0%B7%9A%90M%08E%08A%C8%15%02bT%0E%91%14x%FAy%EEaZ%0Cm%ED9%16q%18L%D7%26%9B%0Fu%02%3D9%5E%5D%E0%B4/mk%88%AD.p%16Ax8eJ%C7%BC%A7B%D3%FE%BD%00%80%27%2C%89%EBK%F4%C6%96%E1H%B8%83v%8C%E1%FB%21Q%EC%C4%7B%81%08S%BB%06%5D%07a5%08%87%C8%FE%90%DF%27%CE%85%CE%D2Y%D6%BC%15%CA%8E%12%B2%C1%E6%A0%E7%20%8A%AD%D3R%00%C9%08%82%A94f%3D%08f%60%25%22%899%1B%3D%C3%27n.%A9%D2%01%ED%9F%19%E9nFB%93%F8%F8%E2%13O%B6%A1%09%8As%01T%87%B0%A8%C9%12%99%E9RF_%91Q6B%01%7C%5D%0B%BE%ACG2%858%CD%AA%99y%13%3D%83%04G%ADR%AD%7D%D7%EF%BE%13%B5D%26%99%07e%CC%02%90%29%A2HA%9EN%5D%80%9A%F1mC%AFv%FB%84%88c%87%7D%A5*%23%8B%A7@%19%B3%00%00%21%F2x%20%3B%80%AC%CC%60Zqu%F7%BE%CE%0B%5D%CF%F0%E7X%F3%1D%A6%29%B6%C93M%19%FD%C1%84%93%B5%7Cm%B3%ABi%C7%D7K%E7i%E2%07%25rw%16%E5oW8%F0%FCi%C0%7F%E6%7F5F%7F%21%C6%89%C2Rth%C2%92%E8%D1%A8%D4%CF%A5%FBF%C7L%D3g%BF%1D%3E%0D%F6%F0%A9%D2g%028%0D%F6%F0%E9%11%21%E4%BF%C9%BB%CBn%D9%60%89%1D%00%00%00%00IEND%AEB%60%82") );
		// 	_fl.add("image", undefined, unescape("%89PNG%0D%0A%1A%0A%00%00%00%0DIHDR%00%00%00%94%00%00%00%21%08%06%00%00%00%3F%3B%82%12%00%00%00%09pHYs%00%00%0B%12%00%00%0B%12%01%D2%DD%7E%FC%00%00%04%EFIDATx%9C%ED%5C%8Dm%22%3D%10u%3E%5D%03%5C%09%A4%84%A1%84PBR%02%29%01J8J%80%12%A0%04RB%A6%84P%C2G%099%8D%EEmd%CC%B3%D7k%BC%1C%BA%F8I%28%CA%EE%E2Y%8F%9F%E7%D7%C9%C3%E7%E7%A7kh%A8%85%FF%9A%26%1Bj%A2%11%AA%A1*%1A%A1%1A%AA%A2%11%AA%A1*%7E%94%0C%A6%AAO%CE9q%CE%3D%E3g%88%95%FD.%22%EB%B6%5C%DF%0B%83%B2%3C%10%E9W%84D1%AC%1A%B1%BE%0F%B2%09%A5%AAF%A4e%A1f%D49%F7%22%22%C7%EF%AE%F0%7F%1DY%84R%D5%8DsnAnm%ED%23%22%EA%3D%BB%04%F1%26%C1%B3F%A6%99%88%9C%C6%D2%29d%3B%BC%EB%D49%F7%26%22%F3%B1%E45%5C%A27%86%C2%2212%CDE%E4-%BCh%EEMU%8Dh%87%C05Nqm6%E2%3AtDj%F8KHfy%AA%3A%8D%B8%B9%17F%A6%0E%B0BsX%A5%B3%5B%AA%CA%C8%D9%F0%8F%20%E9%F2%22qS%B6%1B%01y6%C1%E5%A3%88%3Cf%7Ew%82%24%C0%87%91u%8Dq%F6x%F6%23%D32%BD%8A%C86%22o%891B%C2%9B%3B79%FBT%0C%88%CD%F7%11%5C%FEJH0%9FE%60%B5W%A9q%23%FA%A3s%C0%FB%87%BAzL%8C%FD%8C%F9%C6%F4%7B%8A%E9*%85%BE%3A%14%B3%26%D9%19%1B%5E%28%8C%99%A6%C8%16%29%EC%1E%08%B2%21%93u%1E%C9v5%AC%9D%27%EFWd%BE%82%7B%1F%88%25Kd%1C0%9F0%3B%EE%C6%8D%EA%A36Tu%82%F7%D9%F5%E8w%E3%C5%A4%D9%88%12JU%85%04%D6%A7%94%AB%8B%80%B1%9C*%10%049%DC*%0E*%90%B7%C0b%0C%91%B1%8B%CD%D7%C3%01%FA%BE%05r%DE%A7%18%29%0B%C5%26%A8%E4Z%1FXVw%B1%80P%28%B3%00%7Bd%87%0F%F6q%CE%FD%EC%5C%C5%D7%8B%8A%3C%E2%5Eh%DE%DF%BA%EF%E1%F3E%EE%84%BC%95%27kN%E6%FC%84P%20%07O%28%FE%E6%20w%CCb%C0%12%86d%DA%C35%3Ex%F3%5EE%0CA/RY%5Eh%9D%1CY%B0%1C0%122%B22%85Z%7C%F1r%F6%C5%3F%01%7F%8DB%29%93wV%845k%AC%AAs%C4F%BE%3E%96%96%C9f%D4%D5%BA%C5%B3%C5Y%DB%F3%88%B56da%8D%A8%E2%97%60F%00%EDj%84%F3%B8%A6%10%7D%17%BD%3CX%8BP%C1F%9C%D7%1B%CA%3B2E%26%08%9C%1B%BF%D9%82%BDv%8Bf%3F%91%D402%DE%2C%96%1AK%E6%BD4%87%D9%A4%B6%23%16A%99%BC%3D%B9%96%BA%97%B3%10%DB%C4ng.e%EC%D8%91%91%D8%82%EFM%AD%18%EE%5E%08%C5%149f%9Bf%90%3B%87u%09%C9%9D%B3%00%A99%B0%7B%A3%12%0Ae%16%26%D7%AC%ED%BB%AA%BE%97dv%3ER%84%CA%0A%A63P%1A%DC%DF%0D%A1%80%0B%7DX%0A%7E%C5%3B%8C%D6%82%EAA%CC%DD%BA%AED%A2%AA%FF%97%96dR%84%CA%0D%A6%FBP+%B8o%A8%00%C4p%8F%DD%11%A3%08%26%9D+%1C*1J%28d%1B%E1.%9A%A0%C2%3A%04%8C%E99%B5%AC1%EB2%25%D6%F7bc%8C%10%E3%DDl%A3Yl%E7%95%08b%1Ec1%D4R%F5%C5P%D7d7%7E%FB%C4%C7%91%14Go%1DO%0C%22%14%5C%5B8%8Fk%D3%7B%B6a%8A%08%85%F7+rQ%20%D6%0CM%7B6%A7%AA%84b%AD%93%A7%1C+%85I%B2%00%8F%91%94Y%AC%E7+c%94%14%A8%BC%C4%F3%EC%DE%D0%8EA%08%96%25%86%0B%9AK%FC%DD%B5%1B%D0%3C%12%88%15%92z%D0%1A%24%09%95%A8%C1%ECz%FAq%93HKCY%C3%11%EE5%5C%A0%18%21S%B8%C8%C4%18%29%23%F2%A6%89%0C%87%5D%CF%A9%24%D3M%81%0D%C9%EA%60%E1%3B1B-%BA%14%1F%7D%C8%F7%CA%B5%A4P%E6%20%B7%DE%5B6@%1D%85%29%EF%10%D6/%D0x%5C%A2%B2%1C%9A%F4%232%8C%18X%90%B8dm%0E%5B%10%BBN%08%C0H%B9%89X%3A%26%EFlL%9B%1Bzw%E1%C6Xg%9E%3E%15%A4%E3_n%03db%C1.%DB%B8%CC%05M0%E6gp%E6%2CUG%EBd%9B.%CC%18%2C%99%97%C1%DC%C3u%EB%1D%D7%C7%5D%1D%01%8E%1C%D7H%E1%ACU%02r%BF%27%9E%3F%3BzS%20%EFb%0Co%2Cv%7C%25%17%17-%26o%DC%D8iY%1F%DD%E6H%1E_%C9%1C%CB%C7%E0S%B6%D9%85M%11YE%9A%A5%7D%B0E%9F%E5%ECh%B8%C3yi%8D%06%AE%2C%BB%5DS%20o%3B%F0H%F1%3Ac%87G%C9%E4%8D%91%D2%DDX%7F%04%F2Vrd%7BP%A5%DC%7C%3C%02%B79v%05%9B%E8%09%F7%5E%D1%BD%1E4Y%C8%F8%99%E8x%1F%BD%F1Y%EF%AD%23I%96%DC@%1E%5B%7C%C5%3D%DB%EDC%7B%8B%27%90%E5%85%8C%BD%87%D5N%91%A9%AB%D2%CF%C8%7C%F68%86%3DD%BF+%EF%13%23%E9%1A%EF5/%29%8B%B4%7F%96Q%09%7D%276%BF%0B%DA_%0E7TE%23TCU4B5%D4%83s%EE7%FB%04b%F5%7E%9A%BF%0A%00%00%00%00IEND%AEB%60%82") );
		// }
		var help = _fr.add(
			'iconbutton', 
			undefined, 
			unescape("%89PNG%0D%0A%1A%0A%00%00%00%0DIHDR%00%00%00%18%00%00%00%19%08%06%00%00%00++%EE%5D%00%00%00%09pHYs%00%00%0B%12%00%00%0B%12%01%D2%DD%7E%FC%00%00%02-IDATH%89c%FC%FF%FF%3F%03-%01%13MM%A7%87%05%2C%84%140%CE%AF0%60%60%60%00a%05%24%E1%0B%0C%0C%0C%07%FE%27v%7C%20%A8%1FW%1C0%CE%AF%28%E0%60a%AD%FA%FB%FF%1F%AF%B1%94%1C%87%B2%900%5C%EE%F4%D3G%9Fo%BDy%C5%CB%C6%CC%B2%FC%D7%DF%3FY%F8%2C%C2i%81%C0%F2%C6%8B%E1%BAFzz%12R%0C%97%5E%3Cc%F8%FA%EB%27X%DCRN%91AIH%84%E1%E5%97%CF%0C%D3O%1E%FE%7D%E9%C5%B3%FB%3F%FE%FC6%C7e%09%5E%0B%7E%FC%F9%AD%C9%C2%C4%F4%E5%EB%AF_%87%A0%C1%22%C0%C2%C4%94%1A%AEk%C4%15m%60%0AVW%BB%7B%CB%D7%B3%CF%1E%F7%FCO%ECh%C0f%0E%CE8%F8%F8%E3%FBz%06%06%86%FC%1F%89%1D%07P%5C4%BFb%C2%EA+%E7oD%1B%98%B2%83%F8%5E%EA%DA%DCw%DE%BD%09d%60%60%20%CD%02%5C.%FA%9F%D8%F1%80q%7E%05%3B%B2%D8%9F%7F%FF%FE%E02%87%E4d%CA8%BF%22@%80%83%F3%1B%8C%BF%E6%CA%F9%1F_%7F%FD%DCL%15%0B%18%E7W%08%B01%B3%CCH4%B6%E0%02%F1w%DF%B9%C1p%FB%ED%EB%7F%0C%0C%0C%13%A8b%01%1B3%CB4e%21a%7EW%15%0D%B0%E1%93%8F%1F%FC%FE%E7%DF%3Fk%7C%C9%94h%0B@%91+%C6%C3%13%D0%E4%E2%CDq%FC%D1%7D%98%E1V%FF%13%3B.%E0%D5GLa%C78%BF%C2%81%8D%99e%E7%CC%80%086P%7E%28%DC%B6%EE%C7%EF%BF%7F%23%FF%27vl%20%A4%97%28%1Fp%B3%B1%CD%CD%B6%B0e%13%E7%E1e8%F2%F0%1E%C8%F0%99%C4%18N%94%05%8C%F3+%14%7E%FF%FD+%0D%0Aw%10%B8%FA%F2%F9gP9D%8C%E1%0C%C4%14v%A0B%8E%9B%8D%FD%FF%D2%0B%A7%C1%9C%27%9F%3E%F0200%10%2C%E4H%B1%E0%C1%FB%EF%DF%3A%97%5E%3C%83%22F%AC%05%03_%1F%80%82H%90%93%AB%DCKM%8B%03%C4%D9v%EB%DA%8F%F7%DF%BF%1D%20%D6%17%C4X%C0%20%C4%C9%F5%3D%DA%C0%14l%C1%89%C7%0F%BE%BF%FF%FE%8D%B0%26R%2Cx%F7%FD%1B%27%2C%92Al%A2M%A7G%24%0F%F1f%0B%03%03%03%00T%A5%F5%85%11%F3X%B2%00%00%00%00IEND%AEB%60%82"), 
			{style: "toolbutton"} 
		)
		help.onClick = function() { openWebsite( "https://www.project-octopus.net/script-schriften-installieren" ) };
	}

	// ------------------------------------------------------------------------------------------------------------------
	//	Unterkante
	// ------------------------------------------------------------------------------------------------------------------
	w.btns.add("statictext", undefined, __('Ruhig bleiben'));
  w.cancelElement = w.btns.add('button', undefined, __('Cancel'))
	w.cancelElement.onClick = function() {
		this.window.close();
	}
  w.footer.add('statictext', undefined, 'v' + version)

	// ------------------------------------------------------------------------------------------------------------------
	//	Die eigentliche UI
	// ------------------------------------------------------------------------------------------------------------------
	
	// ----------------------   Liste der Fontordner --------------------------------------------------------------------
	w.lists = w.interactive.add("panel {orientation: 'row', alignChildren: ['fill', 'fill'], text: '" + __('Fontlists') + "'}")
	w.lists_main = w.lists.add('group {alignChildren: ["fill", "fill"], bounds: [undefined, undefined, 400, 200]}')
	w.lists_btns = w.lists.add('group {orientation: "column", alignChildren: ["fill", "top"], bounds: [undefined, undefined, 300, 200]}')

	w.listbox = w.lists_main.add('listbox' );
	for ( var n = 0; n < state.all_lists.length; n++ ) {
		var aux = w.listbox.add('item', state.all_lists[n].name )
	}
	w.listbox.selection = 0;
	// state.crnt_list = state.all_lists[0].list;

	w.btn_add_list = w.lists_btns.add('button', undefined, __("Liste hinzufügen"));
	w.btn_rm_list = w.lists_btns.add('button', undefined, __("Liste entfernen"));
	w.btn_rename_list = w.lists_btns.add('button', undefined, __("Liste umbenennen"));
	w.btn_reload_list = w.lists_btns.add('button', undefined, __("Schriftenliste aktualisieren"));
	if (doc) {
		w.btn_docinstall_global = w.lists_btns.add('button', undefined, __("Global Dokument-Schriften installieren"));
	}

	w.btn_add_list.onClick = function () { add_list(); }
	w.btn_rm_list.onClick = function () { remove_list(); }
	w.btn_rename_list.onClick = function () { rename_crnt_list(); }
	w.btn_reload_list.onClick = function () { reload_crnt_list(); }



	// -----------------------------------------------------------------------------------------------------------------
	// ----------------------   Liste der Fonts im Ordner --------------------------------------------------------------
	w.fonts = w.interactive.add("panel {orientation: 'row', alignChildren: ['fill', 'fill'], text: '" + __('Fonts in List') + "'}")
	w.fonts_main = w.fonts.add('group {alignChildren: ["fill", "fill"], bounds: [undefined, undefined, 400, 300]}')
	w.fonts_btns = w.fonts.add('group {orientation: "column", alignChildren: ["fill", "top"], bounds: [undefined, undefined, 300, 300]}')

  w.fg = w.fonts_main.add('group {spacing: 0, alignChildren: ["fill", "fill"]}');
	w.fontbox = w.fg.add('listbox', undefined, undefined, {multiselect: true})
	w.stylebox = w.fg.add('listbox')

	build_family_list();
	build_style_list();

	w.listbox.onChange = function () {
		if ( this.selection ) {
			state.crnt_list = state.all_lists[ this.selection.index ].list;
			if (doc) {
				w.btn_docinstall.enabled = true;
				w.btn_allinstall.enabled = true;
				w.btn_selinstall.enabled = true;
				w.btn_update.enabled = true;
			}
		} else {
			state.crnt_list = null;
			state.all_styles = [];
			if (doc) {
				w.btn_docinstall.enabled = false;
				w.btn_allinstall.enabled = false;
				w.btn_selinstall.enabled = false;
				w.btn_update.enabled = false;
			}
		}
		build_family_list();
		build_style_list();
	}
	w.fontbox.onChange = function () {
		var aux = this.selection;
		if ( this.selection ) {
			state.crnt_family_names = [];
			for ( var n = 0; n < this.selection.length; n++ ) state.crnt_family_names.push( this.selection[n].text );
			if ( this.selection.length > 1 ) {
				state.all_styles = [];
				state.crnt_style = "";
			} else {
				state.all_styles = state.crnt_list[ state.crnt_family_names[0] ];
			}
			if (doc) w.btn_selinstall.enabled = true;
		} else {
			state.crnt_family_names = null;
			state.all_styles = [];
			state.crnt_style = "";
			if (doc) w.btn_selinstall.enabled = false;
		}
		build_style_list();
	}
	w.stylebox.onChange = function() {
		state.crnt_style = w.stylebox.selection.text;
	}

	if ( doc ) {
		w.btn_allinstall = w.fonts_btns.add('button', undefined, __("Alle Schriften installieren"));
		w.btn_selinstall = w.fonts_btns.add('button', undefined, __("Ausgewählte Schriften installieren"));
		w.btn_docinstall = w.fonts_btns.add('button', undefined, __("Dokument-Schriften installieren"));
		w.btn_update = w.fonts_btns.add('button', undefined, __("Schriftenliste aktualisieren"));
		w.btn_update.visible = false;
		w.btn_docinstall.onClick = install_document_fonts;
		w.btn_docinstall_global.onClick = install_document_fonts_global;
		w.btn_allinstall.onClick = install_all_fonts;
		w.btn_selinstall.onClick = install_sel_fonts;
		w.btn_update.onClick = function() {
			var f = new File( "/Users/me/Desktop/fontinstaller/Document Fonts alt/state.json");
			f.open("w");
			f.write( JSON.stringify(state, undefined, 2));
			f.close();
			f.execute();
		}
	}


	if ( doc ) {
		// -----------------------------------------------------------------------------------------------------------------
		// ----------------------  Liste der Fonts im Dokument --------------------------------------------------------------
		var dfonts = app.activeDocument.fonts.everyItem().getElements();
		var txt = [];
		for ( var n = 0; n < dfonts.length; n++ ) {
			txt.push( dfonts[n].postscriptName );
		}
		txt.sort();
		w.main.add("statictext", undefined, "        ");
		w.docfont_clm = w.main.add('panel {orientation: "column", enabled: true, alignChildren: ["fill", "fill"], text: "'+ __('Documentfonts') + '"}')
		w.docfont_clm.preferredSize = [250, 500 ];
		w.docfont_clm.maximumSize.height = 500;
		var aux = w.docfont_clm.add('listbox', undefined, txt, {enabled: false} /*, {multiline:true, scrolling: true, readonly:true}*/);
		aux.onChange = function() {
			this.selection = null;
		}
	}		
	

  w.show();

	// ---------------------------------------------------------------------------------------------
	//	Font-Liste aufbauen
	// ---------------------------------------------------------------------------------------------
	function build_family_list() {
		w.fontbox.removeAll();
		if ( state.crnt_list ) {
			// 230418: Wir wollen die Fontliste sortiert haben.
			// for ( var f in state.crnt_list ) {
			// 	if ( f != "path_to_folder" ) {
			// 		w.fontbox.add("item", f );
			// 	}
			// }
			var sorted = [];
			for ( var f in state.crnt_list ) {
				sorted.push( unescape( f ) );
			}
			sorted.sort();
			for ( var n = 0; n < sorted.length; n++ ) {
				if ( sorted[n] != "path_to_folder" ) {
					w.fontbox.add("item", sorted[n] );
				}
			}
			if ( state.crnt_family_names ) {
				w.fontbox.selection = state.crnt_family_names
			}
		}
	}
	// ---------------------------------------------------------------------------------------------
	//	Schnitte aufbauen
	// ---------------------------------------------------------------------------------------------
	function build_style_list() {
		w.stylebox.removeAll();
		if ( state.all_styles && state.all_styles.length ) {
			for ( var n = 0; n < state.all_styles.length; n++ ) {
				if ( state.all_styles[n].style.search(/\.pfb$/i) == -1 ) {
					w.stylebox.add("item", state.all_styles[n].style);
				}
			}
			if ( state.crnt_style != -1 ) {
				w.stylebox.selection = state.crnt_style;
			}
		}
	}
	// ---------------------------------------------------------------------------------------------
	//	Liste hinzufügen
	// in f KANN ein Pfad stehen
	// ---------------------------------------------------------------------------------------------
	function add_list( f ) {
		var nu_json = collect_new_font_list( f );
		if ( nu_json ) {
			var ix = state.all_lists.length;

			state.all_lists.push( {
				name: unescape( nu_json.name.replace(/\.json/i, "") ),
				list: read_json( nu_json )
			});

			state.crnt_list = state.all_lists[ix].list;
			for ( var f in state.crnt_list ) {
				state.crnt_family_names = [f];
				break;
			}
			state.all_styles = state.crnt_list[ state.crnt_family_names[0] ]
			state.crnt_style = 0;
			w.listbox.add('item', unescape( state.all_lists[ix].name ) )
			w.listbox.selection = ix;
			build_family_list();
		}
	}
	// ---------------------------------------------------------------------------------------------
	//	Liste entfernen
	// ---------------------------------------------------------------------------------------------
	function remove_list( no_alert ) {
		if ( ! state.crnt_list ) return null;
		var ix = w.listbox.selection.index;
		var name = w.listbox.selection.text;
		if ( ! no_alert ) {
			if ( ! cs_alert('question', __('really_remove'), '', [
				{ text: __('yes'), value: true },
				{ text: __('no'), value: false },
			])) {
				return null;
			}
			// if ( ! confirm( __('really_remove')) ) {
			// 	return null;
			// }
		}
		var f = new File( fonthub_folder.fullName + "/" + name + ".json" );
		f.remove();
		state.all_lists.splice( ix, 1 );
		w.listbox.remove( w.listbox.selection );
		state.crnt_list = null;
		state.all_styles = [];
		build_family_list();
		build_style_list();
	}
	// ---------------------------------------------------------------------------------------------
	//	Liste umbenennen
	// ---------------------------------------------------------------------------------------------
	function rename_crnt_list() {
		// alert("los\n" + JSON.stringify( state.crnt_list ) );
		if ( ! state.crnt_list ) return;
		var name = w.listbox.selection.text;
		var nu_name = prompt( __("Neuer Name für die Liste"), name );
		if ( nu_name ) {
			try {
				var file = new File( fonthub_folder.fullName + "/" + name + ".json" );
				if ( file.exists ) {
					file.rename( nu_name + ".json" );
					w.listbox.selection.text = nu_name;
					w.layout.layout();
				} else {
					// alert( "Datei nicht gefunden" );
					cs_alert("stop", "Listfile not found", "Not found", "OK")
				}
			} catch(e) {
				for ( var p in e ) {
					if ( p != "source" ) {
						$.writeln( p + ": " + e[p] );
					}
				}
				// alert( "Fehler beim Umbenennen\n" + e)
				cs_alert("warning", "Rename-Error: " + e, "", "OK");
			}
		}

	}

	// Das ist derzeit zu knifflig
	function reload_crnt_list() {
		if ( ! state.crnt_list ) return;
		var name = w.listbox.selection.text;
		try {
			var path = state.crnt_list['path_to_folder'][0].path;
			remove_list( true )
			add_list( path )
		} catch(e) {
		}
	}

	// ---------------------------------------------------------------------------------------------
	//	Dokument-Schriften installieren
	// ---------------------------------------------------------------------------------------------
	function install_document_fonts() { install_fonts('doc')}
	function install_document_fonts_global() { install_fonts('doc_global')}
	function install_all_fonts() { install_fonts('all')}
	function install_sel_fonts() { install_fonts('sel')}
	function do_this() {}

	// ------------------------------------------------------------------------------------------------------------------------
	//  Fonts im aktuellen Dokument installieren
	// ------------------------------------------------------------------------------------------------------------------------
	function install_fonts( which ) {
		var _log = [];
		var doc_fonts_path = doc.fullName.parent.fullName + "/Document Fonts";
		var created_folder = false;
		if ( Folder( doc_fonts_path ).exists == false ) {
			Folder( doc_fonts_path ).create();
			created_folder = true;
		}
		var these_styles = [];
		if ( which == "all" ) {
			// { <family>: [ {<path>, <stylename> }, ... ], ... }
			_log.push( __("install-all"))
			for ( var f in state.crnt_list ) {
				for ( var s = 0; s < state.crnt_list[f].length; s++ ) {
					these_styles.push( state.crnt_list[f][s].path );
					_log.push( "- " + f + "-" + state.crnt_list[f][s].style );
				}
			}
		} else if ( which == "sel") {
			_log.push( __("install-sel"))
			// Stile können nur ausgewählt werden, wenn nur eine Familie ausgewählt ist.
			// Ist kein Stil ausgewählt, werden alle installiert
			if ( state.crnt_family_names.length == 1 ) {
				var crnt_fam = state.crnt_list[ state.crnt_family_names[0] ];
				
				if ( state.crnt_style ) {
					// ------------------------  Eine Familie und ein Stil gewählt -------------------------------
					for ( var n = 0; n < crnt_fam.length; n++  ) {
						if ( crnt_fam[n].style == state.crnt_style ) {
							these_styles.push( crnt_fam[n].path );
							_log.push( "- " + state.crnt_family_names[0] + "-" + crnt_fam[n].style );
						}
					}
				} else {
					// ------------------------  Eine Familie und KEIN Stil gewählt -------------------------------
					for ( var n = 0; n < crnt_fam.length; n++  ) {
						these_styles.push( crnt_fam[n].path );
						_log.push( "- " + state.crnt_family_names[0] + "-" + crnt_fam[n].style );
					}
				}
			} else if ( state.crnt_family_names.length > 1) {
				// ------------------------  Mehrere Familien gwählt -------------------------------
				for ( var f = 0; f < state.crnt_family_names.length; f++ ) {
					for ( var s = 0; s < state.crnt_list[ state.crnt_family_names[f] ].length; s++ ) {
						these_styles.push( state.crnt_list[ state.crnt_family_names[f] ][s].path );
						_log.push( "- " + state.crnt_family_names[f] + "-" + state.crnt_list[ state.crnt_family_names[f] ][s].style );
					}
				}
			}
		} else if (which == "doc" || which == "doc_global") {
			_log.push( __("install-doc"))
			// state.crnt_list = state.all_lists[ this.selection.index ].list;
			// all_lists: [ {name: "", list: {} } ]
			var the_lists = [];
			if ( w.listbox.selection ) {
				// ---------- Die ausgewählte(n) zuerst -------------------
				for ( var n = 0; n < state.all_lists.length; n++ ) {
					if ( n == w.listbox.selection.index ) {
						the_lists.push( state.all_lists[n] );
					}
				}
				if ( which == "doc_global" ) {
					for ( var n = 0; n < state.all_lists.length; n++ ) {
						if ( n != w.listbox.selection.index ) {
							the_lists.push( state.all_lists[n] );
						}
					}
				}
			} else {
				for ( var n = 0; n < state.all_lists.length; n++ ) {
					the_lists.push( state.all_lists[n] );
				}
			}		// fill the_list
			var dfonts = doc.fonts.everyItem().getElements();
			for ( var ndf = 0; ndf < dfonts.length; ndf++ ) {
				var dname = dfonts[ndf].postscriptName;
				_log.push( "\n- " + dname );
				if ( ! dname ) dname = dfonts[ndf].fullName;
				dname = normalize( dname );
				var found = false;
				listloop: for ( var ncl = 0; ncl < the_lists.length; ncl++ ) {
					var cl = the_lists[ncl].list;
					for ( var cf in cl ) {
						for ( ns = 0; ns < cl[ cf ].length; ns++ ) {
							var s = cl[ cf ][ ns ];
							var aux = levDist( normalize(cf + s.style), dname )
							if ( aux < 8 ) $.writeln( normalize( cf + s.style ) + " ≈ " + dname + " -> " + aux );
							if ( levDist( normalize(cf + s.style), dname ) < 3 ) {
								these_styles.push( s.path );
								found = true;
								_log.push( "   in \"" + the_lists[ncl].name + "\"")
								break listloop;
							}	// f+s == dname
							// Wenn eine Familie nur einen Schnitt hat, fehlt oft das "regular" im Dateinamen
							var aux = levDist( dname.substr(0, normalize(cf).length ), normalize(cf) );
							if ( cl[ cf ].length == 1 && levDist( dname.substr(0, normalize(cf).length ), normalize(cf) ) < 3 ) {
								these_styles.push( s.path );
								found = true;
								_log.push( "   in \"" + the_lists[ncl].name + "\"")
								break listloop;
							}	// kein style in dname
						}		// style loop
					}			// family loop
				}				// list loop
				if ( ! found ) {
					_log.push( __('not-found'))
				}
			}					// dfont loop
		}						// which == doc

		_log.push(" ");

		// -----------------------------------------------------------------------------------------------------
		//	Array mit Pfaden ist voll. Jetzt Kopieren
		// -----------------------------------------------------------------------------------------------------
		var oks = 0;;
		for ( var n = 0; n < these_styles.length; n++ ) {
			var src_path = these_styles[n]
			var src = new File (src_path);
			var tgt = new File( doc_fonts_path + "/" + src_path.split("/").pop() );
			var aux = src.copy( tgt );
			if ( ! aux ) _log.push( "· " + src.fullName.split("/").pop() + __("not-copied") );
			oks++;
			if ( src_path.search(/\.pfm/i) != -1 ) {
				src = new File( src_path.replace(/\.PFM$/, ".PFB").replace(/\.pfm$/, ".pfb") );
				if ( src.exists ) {
					tgt = new File( doc_fonts_path + "/" + src.fullName.split("/").pop() );
					aux = src.copy( tgt );
					if ( ! aux ) _log.push( "· " + src.fullName.split("/").pop() + __("not-copied") );
				}
			}
		}

		// -----------------------------------------------------------------------------------------------------
		//	Bescheid geben
		// -----------------------------------------------------------------------------------------------------
		if ( created_folder ) {
			if ( oks ) {
				if ( cs_alert('question', _log.join("\n") + "\n\n" + oks + " " + __('number-installed'), "", [ { text: "Ja", value: true }, { text: "Nein", value: false} ] ) ) {
					w.close();
					re_open();
				}
			} else {
				cs_alert("stop", _log.join("\n"), "fail", "ok" );
			}
		} else {
			cs_alert("info", _log.join("\n") + "\n\n" + __('update-hint'), "ok", "ok" );
		}

		function normalize( name ) {
			return name.toLowerCase().replace(/[^a-z0-9A-Z]/g, "");
		}
		function levDist(w1, w2) {
			var d = []; //2d matrix
			var n1 = w1.length;
			var n2 = w2.length;		
			if (n1 == 0) return n2;
			if (n2 == 0) return n1;
			for (var i = n1; i >= 0; i--) d[i] = [];
			for (var i = n1; i >= 0; i--) d[i][0] = i;
			for (var j = n2; j >= 0; j--) d[0][j] = j;
			for (var i = 1; i <= n1; i++) {
					var w1_i = w1.charAt(i - 1);
					for (var j = 1; j <= n2; j++) {
							if (i == j && d[i][j] > 4) return n1;		
							var w2_j = w2.charAt(j - 1);
							var cost = (w1_i == w2_j) ? 0 : 1; // Step 5
							var mi = d[i - 1][j] + 1;
							var b = d[i][j - 1] + 1;
							var c = d[i - 1][j - 1] + cost;		
							if (b < mi) mi = b;
							if (c < mi) mi = c;
							d[i][j] = mi; // Step 6
							if (i > 1 && j > 1 && w1_i == w2.charAt(j - 2) && w1.charAt(i - 2) == w2_j) {
									d[i][j] = Math.min(d[i][j], d[i - 2][j - 2] + cost);
							}
					}
			}
			return d[n1][n2];
		}
	}
}
// ------------------------------------------------------------------------------------------------------------------------
// ------------------------------------------------------------------------------------------------------------------------
// ------------------------------------------------------------------------------------------------------------------------


function openWebsite(url) {
	url = url.split(" ");
	url = url.join("+");
	url = encodeURI( url );
	if (File.fs == "Macintosh") {
		var tempFile = File("~/Desktop/tempurl.webloc");
		tempFile.open("w");
		tempFile.write("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\
		<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\
		<plist version=\"1.0\">\
			<dict>\
				<key>URL</key>\
				<string>"+url+"</string>\
			</dict>\
		</plist>");
		tempFile.close();
		tempFile.execute();
		for (var aux = 0; aux < 100; aux++) {
			$.sleep(10);
		}
		tempFile.remove();
	} else {
		var tempFile = File("~/Desktop/cuppascript.url");
		tempFile.open("w");
		tempFile.write("[InternetShortcut]\
URL="+url);
		tempFile.close();
		tempFile.execute();
		for (var aux = 0; aux < 100; aux++) {
			$.sleep(10);
		}
		tempFile.remove();
	}
}

function re_open() {
	var path = doc.fullName;
	doc.close( SaveOptions.YES );	
	app.scriptPreferences.userInteractionLevel = UserInteractionLevels.NEVER_INTERACT;
	try {
		doc = app.open( path );
	} catch(e) {
		// var f = new File( Folder.desktop.fullName + "/error.txt");
		// f.open("w");
		// for ( var p in e ) {
		// 	if ( p != source ) f.writeln( p + ": " + e[p] );
		// }
		// f.close();
	} finally {
		app.scriptPreferences.userInteractionLevel = UserInteractionLevels.INTERACT_WITH_ALL;
		// myIdleTask.sleep = 0;
	}
}


function ensure_path_exists(path, base_path) {
  base_path = unescape(base_path);
  path = path.replace(/^\//, "");
  var bits = path.split("/");
  // Das letzte bit ist der Dateiname
  for (var n = 0; n < bits.length; n++) {
    if (!Folder(base_path + "/" + bits[n]).exists) Folder(base_path + "/" + bits[n]).create();
    base_path += "/" + bits[n];
  }
  return base_path;
}

// ------------------------------------------------------------------------------------------------------------------------
//  Ordner-Listen Admin
// ------------------------------------------------------------------------------------------------------------------------
function load_all_lists() {
	var all_lists = [];

	var all_jsons = fonthub_folder.getFiles( function(f) {
		return f.name.search(/\.json/i) != -1;
	})
	for ( var n = 0; n < all_jsons.length; n++ ) {
		all_lists.push( {
			name: unescape( all_jsons[n].name.replace(/\.json/i, "") ),
			list: read_json( all_jsons[n] )
		});
	}
	return all_lists;
}
function collect_new_font_list( f ) {
	if ( ! f ) {
		f = Folder.selectDialog( __("Where") );
	} else {
		if ( typeof f == "string" ) {
			f = new Folder( f );
		}
	}
  if ( ! f ) return null;
  var fonts = collect_fonts_in_folder( f );
  fonts.path_to_folder = f.fullName;
  var flist = new File( fonthub_folder.fullName + "/" + f.name + ".json" );
  flist.encoding = "UTF-8";
  flist.open("w");
  flist.write( JSON.stringify(fonts, undefined, 2) );
  flist.close();
  return flist;
}

function collect_fonts_in_folder( folder ) {
  var then = new Date().getTime();
  if ( typeof folder == "string" ) {
    folder = unescape( folder );
    folder = new Folder( folder );
  }
  var fonts = get_files_in_folder( folder, 0 );
  // var now = new Date().getTime();
	// var n = 0; 
	// for ( var _f in fonts ) n++;
  // if ( dbg ) alert( "Done in " + ((now-then)/1000 ) + " Seconds for " + n + " Fonts" );
  return fonts;

  function get_files_in_folder( folder, indent ) {
    var files = folder.getFiles( function(f) { return f.constructor.name !== "Folder" && f.name.charAt(0) != "." && f.name.search(/\.(pfm|ttf|otf)$/i) != -1 } );
    var folders = folder.getFiles( function(f) { return f.constructor.name == "Folder" && f.name.charAt(0) != "." } );
    for ( var n = 0; n < folders.length; n++ ) {
      files = files.concat( get_files_in_folder( folders[n], indent+1 ) );
    }
    if ( indent > 0 ) {
      return files;
    } else {
      var rs = {};
      for ( var n = 0; n < files.length; n++ ) {
        rs[ files[n].name.replace(/\.(pfm|ttf|otf)$/i, "" ) ] = files[n].toString();
      }
      return rs;
    }
  }
}

// ------------------------------------------------------------------------------------------------------------------------
// Alle Listen aktualisieren (falls Fonts dazugekommen sind oä.)
// ------------------------------------------------------------------------------------------------------------------------
function update_font_lists() {
  var lists = fonthub_folder.getFiles( function(f) { return f.name.search(/\.json/) != -1 });
  
  var w = new Window("palette");
  w.pb = w.add("progressbar", [undefined, undefined, 400, 20 ]);
  w.pb.maxvalue = lists.length;
  w.show();

  for ( var n = 0; n < lists.length; n++ ) {
    w.pb.value = n+1;
    var flist = lists[n];
    var list = read_json( flist );
    if ( list && list.hasOwnProperty("path_to_folder") ) {
      $.writeln( "read list ");
      var new_list = collect_fonts_in_folder( list.path_to_folder );
      new_list.path_to_folder = list.path_to_folder;
      flist.encoding = "UTF-8";
      flist.open("w");
      flist.write( JSON.stringify(new_list, undefined, 2) );
      flist.close(); 
    } 
  }
  w.close();
}

// ------------------------------------------------------------------------------------------------------------------------
//  Liste entfernen
// ------------------------------------------------------------------------------------------------------------------------
function remove_font_list() {
  var lists = fonthub_folder.getFiles( function(f) { return f.name.search(/\.json/) != -1 });
  var w = new Window("dialog");
  w.alignChildren = ['fill', 'fill'];
  w.add("statictext", [undefined, undefined, 400, 20], __("Select Font"));
  //w.lb = w.add("listbox", [undefined, undefined, 400, 400]);
  w.lb = w.add("listbox", undefined, [], {multiselect: true});
  for ( var n = 0; n < lists.length; n++ ) {
    var aux = unescape( lists[n].name.replace(/\.json$/, ""));
    w.lb.add("item", aux);
    $.writeln( aux );
  }
  w.defaultElement = w.add("button", undefined, __("Delete"));
  w.cancelElement = w.add("button", undefined, __("Cancel"));

  if( w.show() == 1 ){
    var sel = w.lb.selection;
    for ( var ni = sel.length-1; ni >= 0; ni-- ) {
      inner: for ( var nl = lists.length-1; nl >= 0; nl-- ) {
        var a = unescape(lists[nl].name).replace(/\.json$/, "");
        var b = sel[ni].text;
        if ( unescape(lists[nl].name).replace(/\.json$/, "") == sel[ni].text ) {
          lists[nl].remove();
          break inner;
        }
      }
    }
  }
}






function read_json( file ) {
  if ( typeof file == "string" ) file = new File( file );
  if ( ! file.exists ) return {};
  file.encoding = "UTF-8";
  file.open("r");
  var j = file.read();
  file.close();
  if ( j ) {
    j = JSON.parse( j );
		var list = {};
		for ( var f in j ) {
			var aux = f.split("-");
			if ( aux.length > 1 ) {
				var style = aux.pop();
			} else {
				var style = "Regular";
			}
			var family = aux.join("-");
			if ( ! list.hasOwnProperty( family ) ) {
				list[ family ] = [];
			}
			list[family].push( {
				style: style,
				path: j[f]
			})
		}
		for ( l in list ) {
			list[l].sort( function(a,b) {
				if ( a.style < b.style ) return -1;
				if ( a.style > b.style ) return 1;
				return 0;
			})
		}
		return list;
	
  } else {
    return {};
  }
}

function show_ready_dialog(msg, msec) {
	var dialog = new Window('palette');
	dialog.add('statictext', undefined, msg);
  dialog.sec = dialog.add("statictext")
  var now = new Date().getTime();
	var then = new Date().getTime();
	dialog.show();
	while (now - then < msec) {
    if ( (now-then) % 1000 < 10 ) {
      dialog.sec.text = Math.ceil( (now-then) / 1000 );
    }
    now = new Date().getTime();
	}
	dialog.close();

}

// -------------------------------------------------------------------------------------------------------------------------
//	btn kann auch ein Array sein: [ { text: 'OK', value: true }, {text: 'Cancel', value: false } ]
// -------------------------------------------------------------------------------------------------------------------------
// function cs_alert( level, msg, titel, btn ) {
// 	var rs = true;

//   if ( ! titel ) titel = "Obacht";
//   var w = new Window("dialog {text: '" + titel + "', alignChildren: ['fill', 'fill']}");
//   w.g = w.add("group {orientation: 'row', alignChildren: ['left', 'top']}")
//   w.g.spacing = 20;

//   if ( level == "stop" ) {
//     // stop.png
//     w.g.add("image", undefined, unescape("%89PNG%0D%0A%1A%0A%00%00%00%0DIHDR%00%00%000%00%00%000%08%06%00%00%00W%02%F9%87%00%00%00%09pHYs%00%00%0B%12%00%00%0B%12%01%D2%DD%7E%FC%00%00%06%94IDATh%81%CDZ%0BPTU%18%FEy%B8%0B%2C%8F%85%1D%D0%C5V@%C4%17%8B%92hVV%80%CE%E88%8D%9A9Nj5%D8%8C%3D%1Ck%24%B3%CC%A6%C6lF%CD%B1i%88%C6%D1j%AC%A54S%D3%28%8A%1AK%05%13%B5%92%09%93%7C%80%0C%1A%22%8A%A2%02%8A%81%E26%DFa%EF%F5%DE%7D%9C%FB%80%85%BE%99%9D%BD%F7%EE%B9%E7%7E%DF9%FF%EB%9C%BB%01N%A7%93%B4%E2%8A-%C5AD9%9Ao%E4%A3%20%A6%AEz%BE%D6%9B%02%FF%27%E4%81%1CW%DF%9A%A0I%80%1F%C9%0B%D0%2CB%B5%09%F5%14%F9cIqTf%B7Q%B3%29%84%FE%89%8Bd%D7%065%B6%D0%A0%C6f%F6%99PYGZ%CC%29XM%A3%EE%92%DF%3A%D1N%3F%8CO%A1%B24%1B%B5%84%19%B9m%23%DB%DA%E9%85%EF%CAs%16%27%8F0%C4%D7%9C%98%A7%D4%B7%E2%0C%E8%25%DFl2%D2%C6ici%E3%F4%0CE%D2%DE%60%3F%D3H%A5%B9%05%8A3%C1%15%A0%97%FC%C6i%19%B4v%EE%04%5D%C4%A5x%BE%A8%9CVo%DA%CB%15%E1S%80Z%F2%C6%D9%8F%93%E9%FD%B5%ECx%DB%95%1Az%E6l%29%DD%BCs%BB%5B%C4%05%C0%9Cj%E7%E5%13%CF%27%BCF%21%3D%E4%17%9C%DDOsk%F7%F4%18y%003%08%87%E7E%27%0F%01z%C9o%BA%7C%92%B4%A7De%20j%B9%E0U%84L%80%1E%F2%07%AE_%60%E4%FD%05%84%5B%09%3CD%88%02%F4%90%07%5E%AA+%F3%1By%1F%90%89%60%02%F4%92%07N%FD%DB%DC%5B%C4%A5%10E%04w%87%3C%D0%93N%AB%11%10%C1f@7%F9%DE@Zm%23%EF%299%8A%C5%5C_%92%07%EC%7C%01%FCj%B4%AF%C9%07%07%04PJ%E6%24n%1B%AE%005%E4%F1%10w%24%1A%22dW%B2%22%E2%29%3D%CC%C2%8E%F1%FD%989Q%3C%E7a%82i%80%22%07U%D5%28%0F%09%86%08%EAt%3A%19%29s%B0%81%B5%84%80%C2kg%D8%07%C8%8D%B3%D3%B5%CE%0E%D6%26*%C8@3kvSE%5B%13%B7_%0CKAR%B6%E2%F35%AF%C8%DC%81%D1%05%CEt%B4%D2%0Ak%06%CD%88JdD%05%F2%80%A3%A9%8Ar%2CCi%C5%F9%23%EC%5C%CD%E8%3F%12n%A5%04C%B8%FF%05%BCe%1D%C3%C8%0B%A4%DEn%28g%A3%2C%05F_v%7E%BB%C3%5BW%22B%03%83U%8D%3E%F5%84%00%8C%D2%80%7EaT%D2%DA@%CD%9D%1D%E4H%CC%A2%95%0D%E5%B26%25%AD%E7%E9%83%C6J%CA%8E%88%A7%EC%AA%EF%29%AF%F1%98%CF%FE%60%3A%9F%25d%AA%1A%7D%D6%BE%E9%9E%21%3Ek%B0%98%BAjU%9D%08%C5%9C9%C8@%E6%20%23%9B%11%BD%F8*i%12%3D%11%93%2C%BB%1B%09%CB%17%BA%ED%C4%80%3D%24%9A%7D%C3T%DC%CDE-%606%18yw%F2J%E0%0A@%A48%D2v%89%86%87%98%E9%A1%F0%01%3E%DB%15%5C%A9%D2E%1A%CE%9E%19n%A5%B1%A6Xn%FF%3Cp%05%DC%7Bb%A7x%8C%07%C1%B1%BC%D9%E6Q%85%90%E8%0B%F0%8Do%92%27%EB%BAW%80j%27.%BD%DE@%23%FE%DENg%3B%AE%CB%AEC%A4%96%85%8C4%F1%C1%DC%E0%3F%DD%81%A2%80%D1a%16%12%1E%89%CA%13%22%B0%F6%25%97%F3*%25%24w%E4X%86%C9%AE%7Cz%F9%A4%C7%A0%08%C0s%B2N%15Q%F1%F8%14%B6%CB%E1%0D%DC%28%B4%E4%D7OXX%C4%03@%5CZ%3A%C3%E9%A4%E7%10%19%14%10@%B7%15%B6i%9C%19%CF%B1Y%93%0AG%F4%BA%9A._%B3/%AF%FF%9D%DE%BDP%21%9Ec%9B%E5%8B%D5%85l%F3K%0A%EE%0C%CC%B7%0Ce%D3%BC%AF%F5%3C%1D%1E%3E%83%92%8D%91%E2o%EE%E4g%98%13E%F2%9E%D5%91%1C%85%C9S%3CL%09%23-%C5%7B%17%8FR%20%05%D0%A2%B8T%9A%FA%DBi%AAL%8C%A3%17%17O%F5%E8%8B%EB%C4%E88%BA%A2k%F5%96%19a%A5%D3%F69ld%D0%B9@%16%A3%87%12%E2%D5%FA%C3%E2%7D%C8%C4%DE%C2%A9%D9%95%A1%11%08%D6%0D%BC%9F%5E%3EwH%FC%0D%3E%96w%F1%18%E5%F6Oc%E7%A8%AFF%85ZhsS5%FD%99_LQ7%DA%BDr%E4%CE@%D4%B2%95ld%17%C7%D9%A9%B4%B5%81M%FB%9A%81%F7%D1%AD1%CF2S@%D2%B1%04%87%D0%92s%87d%A3%3F+z%F0%DD%11%F2R%AD%02%20%3A%25%D2%26%BB%86%7E%B0I%00%0C6F%B2%84%B8%E9%C3%DD%3E%C9+%0A%18%5D%7C%80%B6%AC%DF%C3%B2+%B9%0A6%00%3E%81%99%99S%BB%87j%DA%5B%C4%28%04%AA%5B%93%26%D1i%C9%3A%19%25%B1%3B%E0%03%D6%BF6%D3G%09%0F%CB%CC%12%FDL%AE.f%FD%CF%8E%1EL%0Bv%94Q%F6%EE%3Fx%14%95%A3P%FB%8E%5D4%EC%CDu%EC%183%00%D3%80C%BB%9B%08%88lu%95%01Go%DEu%D0%85%B1%23e%ED%10Y%D0%CF%85%5Bm%94%7E%FCkf%96%EE%BE%85%FE_%5B%B7%9D%DE%F8%BCD%89%1E%13P%A0%D4h%CA%CF%E5%B4%3E%FFG%969s%EB%0E%8A%0E%8C%11%9F%1B3%84%99%13%88%08e%80%20%0E%E6%E3%5E%1Al%B8t%9C%7D%A3%00D%3B%98%8C%BB%88%DC-%A5%E4%DC%F9%AD%22yp%0Ft%ED9*%8A%98%B3%B7%92%AC%CBWQASW%D9%10%DF%CFD%FB%87M%A7/%93%26%CA%DA%C1%C9%05%D8Cc%D8%91%E0%BC%ED%CE%3B%E29%22%1C%E0p%F5%07%11%E3L%B1%F4%8E%A3%84%96n%3B%A8%8A%3C%B83%13R+%A2%DF%AE%226%13%C0%AA%81%E3%E8%97%96z%0FS%12%08%01%AF%F7Og%DFpt%92%84%5E%08%11%89K%FCe%DF%C7%87iQ%21%DF%E6%A5%E4I%1AFq%C1U%B6r%B7Y0%13%D1AFZ%BB%D4%C2l%1D%8E%8DdG%AEmF%D86%B9%99OZh%0Csv%20%240%88%09%19j%8CbmaJ%C0%8D%25%CB%98%BFi%21O%EEN%ACv%26%E0%13%3B7%94%B0%DC%20%C5S%B5%7B%C5%B3%85%B1%A9%E2%F1+%FDG%89%C7%C8%E0%F0%99%3C%DB%03%EC%1C%95%AE%5E%F2%1E%02%B4%88%88.%FC%89%9E%5C%ED%10w%20%B0%06%16j%1A%D4O%F9%B6%07%C5%B6%28%95SC%BB%D6%0CW%3B%BBb%BA%60BO%AFq%E8%26O%3D%F1%82%E3%C6%CCG%C9%96%9FGYUE%2C%D9%21%0BW%8C%9C%E5%B1%B5%82%D2%19%CBIreu%B4%85%3F%C1%24%F5%92%E7%0A%D0%22%C2%CF%E0%BEb%E2%262%B5%E6%E4G%28%BE%E4S%CC%C4%7D%28B%D5%BBbU+%B2%3E%10%A1%FAE%B7%EA%25e/%8A%D0%F4%A7%0FM%1B%5B%BD%20B%F3%3FV4%EF%CC%F9Q%84%F6%BF%DB%10%D1%7F.%CA%0A%CF%AE%21%84%00%00%00%00%00IEND%AEB%60%82") );
//   } else if ( level == "vorfahrt" ) {
//     // vorfahrt.png
//     w.g.add("image", undefined, unescape("%89PNG%0D%0A%1A%0A%00%00%00%0DIHDR%00%00%001%00%00%000%08%06%00%00%00%B8%C0%92%B9%00%00%00%09pHYs%00%00%0B%12%00%00%0B%12%01%D2%DD%7E%FC%00%00%05%7CIDATh%81%DDZmh%5BU%18%7E%B2%B4%09%ED%92.Mg-%5D%E22l%A4v%9D%0D%94%D1%E9%C4%C6%FE%19%08%96%B12%ED%26%D2%88s%20%F8%A3%8A%B6%B8%09K%99%03%7F%88%A4+e%CEZ%9B%EA%8F%EA%04Y+%ED%EC%14M%90%AE%9B0%97%B0%82lA%9A%9A%AE%D5IB%9B%B8%F5%C3%B9%C8%B9%BD7%BB%B99%F7%DE%DC%7C%14%E7%03%21%E7%9E%F3%9E%8F%E7%BC%E7%BC%E7%3D%EF%BD%AAx%3C%8E%FB%1D%1B%EE%7B%06%FF%17%12%05%EB%D9%99%EA%F2G%16%006%F6g%60%FF%3D%00%16%00%F8%C8/%5E%7FxAq%BBaS%95%03%80%25%3F%C3%06FwY+%DC%7B%EAl%3FWUT/%E8%8B6%C9%C97%FC2%EB%EFr%7B%3D%3B%AF%CD%A5K%C6%C3%91%18%C8%7E%B8%C9%18j%AA%C5%87%CD%F5%98%B2%94+%AE%5Br%7B%19%23G%BF%C0%8E%E9%9Br%A2%8BD%01%8Cu%8A%98%ADD%A5%8DY%8F%1C%C0D%AD%19G%0E5e4x%3E%CC%7FF%E1%7B%E5%B4%9CX%971%14pr%1B%DB%99U%8FdJ6jq%E4%E5%264%BF%DB%9A5%01%82%D0%03%25%18k%B0J%89%CC%10%02%E0%AC%931%14%20%9A%18%CC%B4%C3%AB%DB%CA%D1%7C%A2%15%A7%9F%AD%CF%B4%09*F%1B%AA%A4%8A%1D%5C%82o%9D%08%AB%BD%00R6%9F%BA%A6%1A%AA%92%12%3A%81%07uh%3E%F8%18%A2%DA%C2%9C%12%20%08U%1A%C5%8A%BC%EC%C43H%900%86%02%C1%88%D9%EA%02pLXCm2A%D7%7F%8A%DA%DA%D1%EB%23%88%C6%7E%CF%C9%A0%85%98%A8%AE%14+r%F0%1F%92%0E%3Bv%8D%CD%08k%AC%9E%FF%0E%7FO%5EJi%C9w%3B%0Co%9E%08H%A0%9BL8%BF%98vb%B7%D3%EA%DFz%A33%25%EF%ECB%90%26%9A3%10S+%C0%22%CD%08%A5%900%86%02g%C9%9A%13%E6%DF%9D%BD%81%E5%8F%DDIy%C1%D5X%5EIP%CE%09%A71%14H9%04%C5%7C%27%AA6%96%3E8%89x4%9Ax%0E%AEFib%F9%82%DF%18%0A%B8hmSI%18C%01%E2%C7t%0B%F3%E3%B1%18Cd%BD%B0%FB%EA%AC%EC%C4%8A%92%60%E1d%D7%60%12%96%FB%07%99%A5%B5%1Exr%EA7%AE%97a%BEIM%9B%04%BB%F6%A8%27%F9_%AFw0%FFv%DD%16j%5D%8BF%9FH%1B%D4%1A8%CA%1EI%E4%DB%F5%95h/%DF%21%3B%05%C4%ED%D8%3D%15%E2%1EE%B5%009W%9C%AC%C1%88%D9J%1A%D8%CA%CF%BFs%F1%27%AC%8E%7F%0B%FB%13%DB%D15%0Ff%90%16%ED%BD%81%93%C1%3A%82k%13%B7%D7%60%81A%AD%85%AF%A6%05uEe%18%5E%08%26%CA%A4%D094%C1%95v%09M%AA%10%B2%D7%D3%88%D9j%07%F0%830%7F%83i%0B%0C%93%1E%94%FA%DC%0C%81+%8F%B6%24%AC%D5KA/%3C%B1%B9%84l%BC%FE0s%A6%90%F2R%B5%16%F6%EB_K%F6%C9s%FE%18/%95f%91%92%C6%227%23%ECZ%A4%9A%5C%B2%C9%1B%F5%95%CC%00%09%3C%B1y%04Wb%B0%15%95%25%C9%FA%97%C2r%DD%24%A1%B7%7B%8C%7Bl%97%23%90%16%09%16%0EZ%2697%DA%8ALL%DA%1B%9Bg%96Ni%81%16%EE%F0%B5%249%E7%DCe%2C%FE%B3%BA%26%F3%EB%B8dG%1D%9F_%E0%F6%02%F1%8F%DC%92%C2%2C%D2%8EvD%CCV%27%CD%AF%D2%EE%DF%07%DD%0B%0F3i%5BqYB+%99%A0%F5%FB%29%F4%9E%3C%C7%D5%7CZ%CA%22%F1%A1%24P%E0%A2%99%DC%95/%BFB%ADj%23%93%CE%94%00q/%88%06x%04%06%D3%25%00%25%9A%C0%9A6%A8W%D9%F1%17%9F%C1%C1%96%EDi%B7Cp@%5B%89%8E%B6cX%29%2C%80%F5F%84_D%26%CA%26g%91%F8P%14%B2a%D7%A8_%98%BF%E7%B31%3C%B5%A4%EC%3E%D186%89%87nF%85%04%08%5CJ%08%20%C3%B8%13%F5%E09%E1%1A%91%AD%B8I%ADa%FE%1B%EF%EA%B0%BF%E7%0CM%24q%E5T%02%C5%24%D8%B5%3A%2C%CC%AF%B94%85%D7f%EFH%D6%25%27u%A3%BE%02%1D%FD%E7EE%94%8E%07YD%00%DBi%9B%FC%CD%E3%9F%C2%A0%12_V%86%02%0D%FA.%86%B1kt%82V%ECe%AF%01%8A%91%11%09v%CD%A6%B8%C5%FA%3F%C2x%FB%C7il-%D4Q%EB%D5%A3%18%9B%DF%EB%11k6%23-%20%CBX%AC%8Bv%95%3D%F4%FE%10%9AV4%89gn%1F%10l%1E8%C3%B8%F3%14%0C%B2%EE%7FF%C8%98%84%94%97%FB%7C%DF%3D%DF%C8V%BC%16%B1%B0%A8%8BP%DE%FB%09M%9C%2C%CB%8C%B5%80l%A3%E2%AC%C9M%F1%ABv%9E%BB%80%E6%5B%1Af%13s%E8%1C%B9%02%15%FDH%A2%5E9%95%20%17%A1%7D%AA6%8E%BF3%80%C7%0BJ%9941%A9%CF%F5Q%3D%D7%19%B1+%E7%BA%92%10%8B%1E%9A%A6%E7%D0%F6%8D%8F%B98%BD%D5%23jt%A8%8E%A5R%E4%E4uW%C4l%25%EF%1A%82%B4%E8%A1%FF%D5%03%A8%3B5D%ABFL%AA%FD%3FC%02%12%5E%AE%04%B6%29u/%C4%90%D3%17%8F%11%B35%28%BC%CA%8A%80D%F1%B2%B2H%7C%E4%FA%9D%5D%3A%03%A3F%F1%B2ANI%88E%0F%05H%EB%CA%A9%04%F9x%7B*eq%FC%E9%5E9%95%20%E7%24%D8%CD%9A%12%3Dd%91%B3%7D%C0G%BE%DEc%D3%A2%87%92Q%BCl%90%17%12%22%7EU%5E%B4%80%7C%7EQ%C0%BA%13%9C%97+%1B%C5%CB%06%F9%FE%2C%C2%C1%12%C9%DA%3F%92B%DE%BF%B2%89%98%AD%96%7Cj%81%E0%FE%FFT%08%C0%BF%D5%2C%FF%83m%20%1E%25%00%00%00%00IEND%AEB%60%82") );
// 	} else if (level == "question" ) {
// 		//question
// 		w.g.add("image", undefined, unescape("%89PNG%0D%0A%1A%0A%00%00%00%0DIHDR%00%00%000%00%00%001%08%06%00%00%00%9C%5E*%22%00%00%00%09pHYs%00%00%0B%12%00%00%0B%12%01%D2%DD%7E%FC%00%00%05%F2IDATh%81%EDZ%5Dh%1CU%14%3E%23i%A1%1AI%9C%A0U%CC%BAm%D3%7D%B0%28%5B%18%B0%F8%94%B5%28%E2%83%9A%22i%FB%96%94%C0%14%11u%FB%20%AD%BEt%03%82%0D%05%B3%05A%3A%28%D9%80%0F%AD%7D%E8%F6%C1%1Fl%D1%0D%88%96%E2%60J%E3C%19%13%B7.j%AB%B8%C9b%04+%C8%C8%99%7Ew%BD%7B3%7F%FB%93%D4%8A%1F%5Cv%E6%DE%3B%F7%9Es%EE%F9%9DY%CDu%5D%BA%95q%DB-M%FD%7F%81%81%AE%A0%81j%22e%10%D1%E3D%C4%BFw%E1Z%E0%1C%11-%10%91%ADW%1Ck%CD%A8%F5A%83%0DT%13%29%26%D4D%DB%12s%8DE%22%9A%D0+%CE%C4%1A%D1%DC%00%95%81*%A4%DD%0A%2C%BD%E2%EC_k%06T%1B8%D5%C6Zf5%91%3A%D2%26%3DMC%3D%01%D6%F3%B3%B8%5D%84%AE%DBh%84%D31%A0bA%27%F5%84%5Eq%CE%DD%14%06%E8%06%13_%B1%3A%F0i%E8%15g%D1%EF%21%D8%CA%110%A2%82%9F%DB%BD%06%B4%7Bh+%90U%13%A9%B3%8Aw%F2%A0W%1C-rc%DB%CA%10%D1v%B4M%E8.%A3%15%5D%C3%9C%8DCC%BB%0C%0C%13%D1%FB%3EC%03z%C5Y%F0%21z%88%88D%EB%89X%7E%86%88r%AEa%96%C2%26%B5%9DJT%13%29%BF%05%1A%EC%00%84%E7%89%28%D9%C2%16%8F%851%11%18%C8%3A%01%CD%B6X5%0AD4%D8%C6r%05I%C5V%A0%ADT%02%C6%EC%07%1BR%9Fm%93xFR%B3%AD%EDA%83%ED%E6B%C3%3E%7Dv_%F1%95%11%22%3A%1DC%CF%E3b%ED%188%FF%60%3F%EB%FEd%87%08%17%E8%BC%0A%21%E8%A9.t%F1%B9%F1%E1%07Z%5D%B3%15%B4%C4%80%14%C8TL%FC%B1%BEk%DB%BF%9E%01%10o%28%7D62%D2t%07%E8R%B1%144%D04%03%D5D%CA%F4I%218%E5X%CDL40*7%C5%00%8A%9C%E3%3EC%87%F4%8Ac%FB%F4w%04a%81%2C6%03%D0%FB%B3%3EC%13JUvE%9D%90%5C%DF%5D%BF%CEn%7C%D8%BB%E7%C6%D7%7B%F4%81%A8%AD%CF%84%0D6%13%89%8F%FB%A4%D0%E7%F4%8AsH%E9+%ED%D1%07F%9E%BF%FB%1F%5B%EE_w%07m%9D%3B%E1%5D%1F%DC%98%F6%DA%BD%EBn%A7%A5%BF%FE%A4%A7%BF%FD8j%DF%5C%D8%60%AC%13%80%CBT%7D%3E%EB%BD_%DA%5C%3AY%9D%A7%F4%86%3EO%CA%9Ck%BD%F5%CB7%F5%C1%CB%D7k%1E%F1%B9%1Foh%DC%E7%CBW%C3%B6%9E%8E%CAJ%E3%AA%D0A%9F%BEC%01%F5B%91%88j%E2%86%A5%BC%B1kC%7D%F0%CB%E5k%DEo%E6%CE%FB%A8%7C%FD%B7%B0%3Dy%8Dl%14a%91%D9h5%91%E2%E2%7E%5E%E9%5E%D0+N%A0%F2j%B6U%605%CA%F7%3FJ%E7%7F%FF%99v%CD%7F%D20%FE%C6%FD%8F%D0%07%B5%EF%C3%A4%CF%C4g%E2%D4%04ql%C0/%DF%89z%95Rf5%E2%E6%87W%7F%B8%10%F6%AC%A8%03b%154q%18P%03%16%A1V%0EC%60%EE%12%803%F0%F5%A5%A8%02FE%1C%15%AA%97%8D/%BC%F4%14%9D%D8%F9%90%18bw%99u%0D%B3%28%CF%D7l%AB%17ea3%99%E8E%D70%033%CE0%C4%8E%03%976%DF%23%13O%A8%AEN%B3%BE+S%F31%89%97%E3EZ%B3%ADH%83%F5C%EC8%F0%E1%8E%94%7C%7B%0Cu-31%02%A93%01%A3%7C%1FsI%3E%A5%924%3F%A7%D9%16%17%F3ey%92f%5B%A3X%97%E7%E6%5D%C3l%C8%8B%9A%3A%01%C6%DEO%E78%B4gQd%88%28%F9%2C%11%7DGD%87%A5GB%23%28t%3E+%B9%DC%1E%B8%60%99x%7Es1ED%BDX%BB%04a%C5g@%AF8%5C%A0k%1F%ED%D8%CA%DE%81%D5h%5C%B3%AD%3C%08%E0%289.%FB%7D%E0%98b%C8%EA8c%09%D2%94U%27%8D%B5%05%04%83%DC7%8DL%B7A%D5%9AI%E6%E4%A3%CD%20%C5-%B8%86%99%C3i%1C%003%07p/%D2%EA%19%29%1D%AE%A9%EB%B9%86Y%00q%02/CmHzO%94%95%D6%C8%B4%CA%80po%19%E8%7FQ%10%09%BD%5D%82%AENJ%85%FCE%F4%89%D7%29%B2o/k%B6%B5G%B3-%5E%F7M%CC%15%C8%A3%90/%60%8F%C0%1A%A3%19%06D%8A0%08%A2%3CI%F0F%90%D8%94Dh%0DR%CD%28%05%B9%EA%B1%A6%B0%DE%0C%E6%0A%26z%24%81mF%13%1A%D0%60%E4q%93%B9%E1_%87%8E%EE%CFM%CF%BC%83%AE%C3%D8%B8%06%C9OI%84%EFs%0D%B3%D75%CCQ%E8%F8%90%18%83%BA%080c%9C%24%5D%85%91%3E%E9%C3%C4%D7%10%D6%90%94%956%18z%A8%1B%95j%00/%1A%BFx%FA%02%25%AF%D5%96_%1B%DBY%FA%A9%AF%3B%01%E3%12Fu%05%F9KYYF%E8lQ%9A%97%04%D1%8C%09%A8%DD%5E%D70O%C2%F3%14%255%94%3D%DB%8C%1A8%A3N%60E%ED%FB%CC%17%97%BB%E7%C6%DE%DE%C6%91%13%12%95%09%2C%E1%85%96%07%A8VR%1A%27%C9%0E%84%97%3A%8A%7B%AF%D6%E0Ss%0D%93%D7%DC%A7%D8%C5E%E94%EB%88%0Ad+%DE%3C%03%5B8K%C5%0B%5C%D9%C0%84%C7%10%C4%D6OG%92%5C%09q%83%89%7C%17%7Dcj%DD%0B%E1%14%20%88M%3E%27%EB%21%EA%04%C2%BE%93%891%91%12%CC%C2%1E%CA%D84+1%27%FBn%C1%08%9F%CC%EBD%F4%9E%F4%BC/%82%88%8F%C3@%60%D6%29%BD%7D%16%C65%05%C9%AA%D2%3F%23%EB-%88%11Q%BA%00%3B%22%D5%BB%C4E%14%03Ay%7F%FD%8B%24%8Ez%1Cns%17%13%0B%3BH%C2+%154%DB%CA%29/h%B3%92KN%23%1Bm*%8D%16%08%B5%01%BD%E2%9C%AA%26R%BBQR%1A%F86l%A9%9FT%11%8De%08%03%15j%91E%EB%C5%FC2%BCM%06%7Dyj%11%AB%F2_%09%10%F7%99%28%0D%D1%26%5D%C3%8C%FC%F4%D4%2CV%EB%03%C7%2C%A2%EB%20%82%11%29.%B1cX%D5%7F%AB%20%0E%08uZ%91%CBwd%8F%FF%FFns3AD%7F%03%B1%DF-%86%25%83%8EE%00%00%00%00IEND%AEB%60%82") );
// 	} else {
//     // warnung.png
//     w.g.add("image", undefined, unescape("%89PNG%0D%0A%1A%0A%00%00%00%0DIHDR%00%00%000%00%00%000%08%06%00%00%00W%02%F9%87%00%00%00%09pHYs%00%00%0B%12%00%00%0B%12%01%D2%DD%7E%FC%00%00%07%C3IDATh%81%E5Z%5BL%5CE%18%FE%CAn%B7%14%CB%A5%60%D0%A2%D05%15l+%28%86F%A9%1A%BBj%AD%3E%A8%C5%A81%D6%07%D6x%A9O%EDj%8C%89%D1X%8C%89%26%3E%28X%7D0j%5C%1E%AA%D1j%84%B6%DA%A6%DE%96%C4k-J%83%B5%16%AC%DDBl-%16%DC%05%C4%8A%20%E6%1Bf%0Es%CE%99%BD%B0%944%C6/%D9%87svv%E6%FB%FE%F9o%E7%CC%CE%99%98%98%C0L1PZ%1E%00%A0%3E%7E%00%8B%13Ly%04@%14@%84%9F%C2%DE%EE%C8L%D7%CEX%80%24%1D%04P%07%20%3F%C3%F5%E3%00Z%00%843%153m%01%92x%03%80U%99%2C%98%04m%9Cw%BAB%D2%160PZN%D7h%04%B06S%86%9D%E7%15%E3%F3%CAR%C4%CF%C8FOq%9E%B8W%D67%88%B2%BE%B8%F8%5C%F1%7D/%EF%B5%02%08%15%F6vGO%99%80%81%D2r%BAI8%13Wy%F3%9AJ%BC%7FY9%3E%AF%3A%17%839%D9I%C7%E6%8D%9C%C4%03%DB%BE%C5%FA%1D%ED%83%05%C3%27%EB%0B%7B%BB%5BR%CD%9FR%C0@i9%AD%BE1%E5D%B9%B9%98%BB%F22x.%5C%86%E1%95+%B0%D9%F3%1B%5E%F0%9C@%1C%E3%A9%7E%EABe%B4%0Fm%A1f%DEn*%EC%ED%0Ee%2C%60%A0%B4%9CV%AFO6%81%B7%F6Rd%DF%1B%84%EF%FA%EB%C4uc_%27%1A%8E%B6%23%3E%3E%3Am%E2%3A%D6oo%C7%D3%AF%7D%C2%3B%CD%85%BD%DD%C1i%0BHE%9E%C4%E7%3F%B4AX%9D%E8%18%E9G0%1A%C1%BE%3F%FBgD%5C%81%EEtx%DDfu%99PDV%02%F2%8D%89%C8%D3Ur6%3D%86%BC%AD%5B%2C%F2%E1%FE.%04%BA%B6%9F2%F2%04%E3%85%01/Q/9%A5%16%20%03%D6%E8%F3%9E%E5K%05q%BA%8C%02%C9%DF%1D%8D%CC%D8eL%60%D6%D2%B0QrK%2C@%A6%CAp2%F2%0CR%85%E8%E8%90%20%3F%5B%60%BAu%20%2C9%9A%05%C8%3C%EFJ%95%8A%FC%9C%BC%3C%FB%E0%E3%9D%B3F%3E%01%F2%25G%0B%96%00Ya%5DE%8A%3E%BF%E0%B9g%5D%E4%89%C8%D0%B1Ye%3Bg%9E%CFt%7B%AD%E4*%A0%EF@%83i43%8D%EE6%3ANe%D0%9A%E0%95I%C2%00%8B%AB%10%20%15%B9z%1B%95%E3O%17V%5Cq%AD%E0%60%C0*%B5%0Bj%07%8C%2Ci%FD%D3%89%EA%9C%A2d%1C%82%BA%00Wz%A2%F2%B9%89%B7p%D6%B1x%EE%02%F8%7D%93%EDI%82%5D%10%9C%B3%E4V%B82O%3A%AE%C3E%9C%E0%A2%3A%02%B9%25%C2%92%90%16%AD+%F0%5B%D7%C9%10%3C%F3%82T%5C%F2%C9%DD+%9F%A2l%60%E6Q%BDM2%04%F2J%D06tL%90*%F0Nf%0C%0Ah%89E%C5%87%08%15W%226%3E*%C6%E4%7B%7C%B8%E5%D0n%D1v%24%03%C7%85%CE%AA%B2F%90%0B9M%0C%0D9%7F%15%C82%09H%D7uh%5D%C8%82%B6iQ%0D%D6%E6%FB%05QE%1E%B2R%D7%17U%60%D3%D1%BD%D6.%A4B%A8%B8%0A%05%1E%7B%0AM%C0I%08%F0%3B%EF%26J%9BN%90%2C%C9+R%0D%C7%DA%85%F5t%C4%1C-Fl%2Cy%CBq%F1%FC%22%9B%F5Sp%F2g%99%1E%C0%93%E4_%1Bh%A5%B5%05%7EQ%D0%D8%0B%85%FD%01%3Cy%AC%DD6%262t%14M%7D%DF%E3%EA%DC%12%5C%DD%B5C%B4%DB%89@%F1%9C%C3i%FD%24%9C%16%7B%D3b%9A%04%DC%05%F6C%FE%CE7P%E0%99%27v%C4%89P%EF%17i%CD%15%A9%B8%29-%17%D31c%01%7E%DFd%26%A2%AB8%DD%25%5D%D0mh%F9%E9%92G*%01%CC%16%CC.%CE%D4%A8C%0F%D8%E9%E0%F9%D2%95%A8%9E_%04%FF%BC%DC%A4%F3g%24%E0.%CF%11lm%DFg%5D3%C30%B0L%BE%C9%2C%93%09Zb%87E%B6%99%29%8COd%7Ds%C6l%D7%0C%CC%C0%C1%ED.%17%A1oO%E7AF/%7CmC%BFf%2C%5EG%96%7C%DDg%C3%95%3D1q%B9*%F7l+-%B2%F3%A4%08U%84hyf%97%E9%A0%E1%9C%15.%03%24%8A%1B%AE%C3%97%03tQ%8E%19%FB%F2k%D3%B0%23%5E%F9%AE%D2%96J%AB%0E%F4%A0%BE%E6%06%11X%FC1%89S%00%3F%97%1CxW%04%9D%DEJSdA%96%0FG%FE%1EN*%27XT%81%8E%91%13%96p%EE%5E%DD%A1%5D%88T%DCl%1BG%D2%AC%D8%0A%5C%EF%C3%83%07%E1qO%19%CD%92/Zm%A8m%89%88%C5H%5E%B4%05%E7%AF%11%D5T%C1I%BE%A1%A4%C6%22%EF%2CdN4%94%ACp%B9%12-%AD%23%D4%F3%85%98%87%81N/%E0z%A3%7B%BE1M%171%0A%C8%3D%DE%0F%EF%9Eo%B1%B0%23%2Cr%7C0%FA%A9%D8%8D%F7%96%AC%B1-%CE%C9%5B%96%ACA%E3%AFS%C5%A9%3A%A7%D0H%9Cc%21%8B_%F8%3C%7B%F7%C2%18c%C1S%88%FD3%D9%3BQX%81%27%1B7%8F%E6%60%FE%89%DF%CD%02%E4%CB%D4%B8%F3%9B%05o%B5%88*%BB%B1%B8RX%89%3E%29Z%87%8B%D6a%A2%E6%7E%7C%B7%ECV%F8%7Dy%A8%3B%B4%DBf%FD%60%D1Rk%0ES%B7%0A%D9C1%B3%E9%E0%3C%AA%08r%1D%AEGc%C4%C6Ob%FD%3B_%9A%A6%89%93%BB%CAB%AEw%90e%3B%DB%B0%B5/_TW%C8%86%0D%B2%60%05%BA%B6%89Xh%EE%EF%B2%B2%10%C9%B3%92F%FF%9A%AA%C4zK%AC%C0%C0%25Y%A6e%DD-E%3C%FC%B4%DB%EA%5C%B9%5E%C7%C8%00%1A%06%16%A0%F6%ED%DD%AEy%14g%25%C0%F8*e%FF%EB%AFX%85%8A%16Q%01%CD%1D%D1A%22%AA%0D%88%0C%FFb%7DC%22%3A8%07%03%B85%16%15%C1K%B7t%C6%16%E7%E7%0EE%AB%D6%21V%1D%C4%92%17%9BM%D4%2C%CEB%80t%A36%D3.%5C%F4%CB%EF%16%19ZO%05%B0%0A2%BA%93%DE%06%28qt%1Fgk%A0%8CA%D7%E48Z%D9%24%82%7D%15%C7%7E%B5%E5u%9C%D1f%EC%A3%DA%D49B%CA%B7%12O%3D%FA*%1E%F7%96%89%96%A2Y%16%1E%A6%B5%8E%E5%B7%BA*%A9%DEV%D4-%9C%B4%BE%0A%DE%D8%D8%DF%D6uP%12V%AFe%9C%22%E8N%8D%3D%DF%60%D1%F3/%9B%28%C1%F5V%02S%BB%D0%EA%1C%C9%8C%F4%F0%23/%E1%83%E3SU%93%FE%1B%3E%D1%E5*Bz%5B%11%2C%9A%F4%7F%06%3A%B4%D4K%21j%9C%1E/z%96cMy%A9%E9%03%B1%B6%01%AD%FA%29%8E%B3%95%08%992%D2%F8%0F%3Fb%F5%83%CF%88%89i%7D%BE%91c%EA%D3%DBd%BAC%AB%DC%01%DD%7D%9CnD%21%A6%9E%0A%D2M%0F%FBo%C4%FE%27Z%B1%EC%E3%3D%A6%21q%C9%D1%82M%80%3C%D61%3EA%9F%F9%F5%3E%ECh%FA%105%A3%5E4%CA%02%A3%83%B5B%A1%B1%ECr%1B%29%05%BA%21c%26%A8%B9%8B%CDP%FB%0F%60%F0%F6%BB%90%DD%91%B0E%09%3A%8F%9E%5C%CD%9C%3C%D6i2%FD%9AV%D9t%CF3%18%DC%B9K%A48%D5%06%D3%F7U%F0R%98N%9Ac%94Xv%A0%D0%5C-%90%BB%C8%1Aw%F2%D5%B0%20%CF%DDN%80%26%D3%91S%C6%07%1C%7Bo%5B%8D%B2%3B%EE%C4%D2%DA%ABD%5D%A0%00f%26%06%B7%B3%BFg%95%E5%E3%A4%12%A8%C4%1E%AE%BA%13%E7%B4%FF%80%3F%9F%7B%01c_%19%5DF%21%E1%01%C7%8C%8F%98%C6%AE%AC%C5%7D%1B%AE%C76%DF%88%A8%AE%7C@ap%3A%9F%1Fxz%D3%AC%05%F9S%7F%2C%C4%86%CD-%A9%88%23%E3%23%26MDZ%87%7CCg%15%21%A7%A6%06%EF%5D%B5%1CoT%2CD%F1%84%17%5B%C6%A7%9A%DCa%FC%83%AE%CE%BD%98%7B%F0g%94%7C%F4%19%7C%03%B1TSb%C6%87%7C%9A%88%8C%8FY3D%5C%06l%CAcV%E3%13%99%13r%A2jS%9D%98%05p%8D%EAt%C8%E3%7F%F5W%03%27%FE%B3%7F%F60%E1%B4%FD%DD%06%C0%BF%80%C0%A1%F2%E5%7F%E8*%00%00%00%00IEND%AEB%60%82") );
//   }

//   w.msg = w.g.add("statictext", undefined, msg, {multiline: true} );
// 	w.msg.preferredSize.width = 250;

// 	w.btn_group = w.add("group {orientation: 'row', alignChildren: ['center', 'top'] }");
// 	if ( btn.constructor.name == "Array") {
// 		w.btns = [];
// 		for ( var n = 0; n < btn.length; n++ ) {
// 			w.btns.push( w.btn_group.add("button", undefined, btn[n].text ));
// 			(function( _button, _value ) {
// 				_button.onClick = function() { rs = _value; this.window.close() } 
// 			})( w.btns[n], btn[n].value )
// 		}
// 	} else {
// 		w.btn = w.btn_group.add( "button", undefined, btn )
// 		w.btn.onClick = function() {
// 			w.close();
// 		}
// 	}
//   w.show();

// 	return rs;
// }

function __( id ) {
  if ( typeof loc_strings == "undefined" ) loc_strings = load_translation();
  if (loc_strings.hasOwnProperty(id)) {
    return localize(loc_strings[id]);
  } else {
    return id
  }
}

function  load_translation() {
  return {
    "Fonthub": {"de": "Octopus-Fontinstaller", "en": "Octopus-Fontinstaller"},
    "Add Folder": {"de": "Fontordner hinzufügen", "en": "Add Fontfolder"},
    "Remove": {"de": "Fontordner vergessen", "en": "Remove Fontfolder from List"},
    "Update": {"de": "Fontliste aktualisieren", "en": "Update Fontlist"},
    "Install": {"de": "Schriften des Dokuments installieren", "en": "Install Fonts of Document"},
    "Install manually": {"de": "Schriften aus Liste installieren", "en": "Install Fonts from List"},
    "Cancel": {"de": "Schließen", "en": "Close"},
    "Delete": {"de": "Listen-Dateien löschen", "en": "Remove List-Files"},

		'yes': { "de": "Ja", "en": "Yes"},
		'no': {"de": "Nein", "en": "No"},

		"Fontlists": { "de": "Schriftenlisten", "en": "Lists of Fonts"},
		"Liste hinzufügen": {"de": "Liste aus Ordner erzeugen", "en": "Add List"},
		"Liste entfernen": {"de": "Liste aus Script entfernen", "en": "Remove List"},
		"Fonts in List": {"de": "Schriften im Ordner", "en": "Fonts in List"},
		"Schriften installieren": {"de": "Schriften installieren", "en": "Install all Fonts"},
		"Global Dokument-Schriften installieren": {"de": "Dok.-Schriften aus allen Listen installieren", "en": "Install Document-Fonts from all lists"},
		"Dokument-Schriften installieren": {"de": "Dok.-Schriften aus dieser Liste installieren", "en": "Install Document-Fonts from current list"},
		"Alle Schriften installieren": {"de": "Alle Schriften installieren", "en": "Install all Fonts"},
		"Ausgewählte Schriften installieren": {"de": "Ausgewählte Schriften installieren", "en": "Install selected Fonts"},
		"Schriftenliste aktualisieren": {"de": "Liste erneut aus Ordner erzeugen", "en": "Update Fontlist"},
		"Liste umbenennen": {"de": "Liste im Script umbenennen", "en": "Rename List"},
		"Documentfonts": {"de": "Dokument-Schriften", "en": "Documentfonts"},
		'really_remove': {
			"de": "Soll die Liste wirklich entfernt werden?\nDies betrifft nur die Liste und nicht den Fontordner auf der Festplatte.",
			"en": "Really remove the list?\nThis affects only the list, not the folder on your disk."
	},

    "Where": {"de": "Wo liegen die Fonts?", "en": "Which folder contains the new fonts?"},
		"none-missing": {"de": "Es sind keine Schriften als fehlend markiert", "en": "Apparently no fonts are missing"},
		"install_fail": {"de": "Folgende Schriften wurden nicht installiert", "en": "Some fonts could not be installed"},
		"number-installed": { 
			"de": "Schriftschnitte wurden installiert\n\nSoll das Dokument gleich neu geöffnet werden, um die Schriften zu aktivieren? \n\nEs muss dafür zuvor gespeichert werden.",
			"en": "Font-styles were installed\n\nDo you want the document re-opened to activate the fonts?\n\nIt needs to be saved first."
		},
		"install-all": {"de": "Installiere alle Schriften in Liste","en": "Install all Fonts in List"},
		"install-sel": { "de": "Installiere ausgewählte Schrift", "en": "Install selected Font"},
		"install-doc": { "de": "Installiere Dokumentschriften", "en": "Install Document Fonts"},
		"not-found": {"de": "nicht gefunden", "en": "not found"},
		"not-copied": {"de": " konnte nicht kopiert werden", "en": " could not be copied"},
		"update-hint": {"de": "Es dauert meistens einen Moment, bis InDesign die Schriften in 'Document Fonts' entdeckt...", "en": "Usually it takes a moment or two until InDesign recognises new Fonts in 'Document Fonts'"},

    "Select Font": {"de": "Wählen Sie die zu löschende Liste(n)", "en": "Select the list(s) you want to remove"},
    "Installed Msg": {"de": "Diese Schriften wurden gefunden", "en": "These fonts were found"},
    "none found": {"de": "Keine der fehlenden Schriften wurden im Depot gefunden", "en": "None of the missing fonts were found"},
    "wait": {"de": "Normalerweise braucht InDesign einen Moment, bis er die Schriften entdeckt hat", "en": "Please wait a moment for InDesign to recognize the new fonts"},
    "need to be saved": {"de": "Es können nur für gespeicherte Dokumente die Schriften nachinstalliert werden", "en": "The document needs to be saved before you can install fonts"},
		"need-open-doc": {"de": "Kein Dokument offen\nEs muss ein gespeichertes Dokument offen sein, um Fonts für dieses Dokument zu installieren.", "en": "No open document\nThis script installs Fonts in the 'Document Fonts' folder of the active Document."},

		"Ruhig bleiben": {"de": "Die Schriftenordner, aus denen die Listen ausgelesen werden, werden vom Script NICHT verändert.", "en": "This script will NOT make any changes in the font-folders the lists are extracted from" }
  }
}
function init() {

	if (typeof JSON !== "object") {
		JSON = {};
	}

	(function () {
		"use strict";

		var rx_one = /^[\],:{}\s]*$/;
		var rx_two = /\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g;
		var rx_three = /"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
		var rx_four = /(?:^|:|,)(?:\s*\[)+/g;
		var rx_escapable = /[\\"\u0000-\u001f\u007f-\u009f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g;
		var rx_dangerous = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g;

		function f(n) {
			// Format integers to have at least two digits.
			return (n < 10)
				? "0" + n
				: n;
		}

		function this_value() {
			return this.valueOf();
		}

		if (typeof Date.prototype.toJSON !== "function") {

			Date.prototype.toJSON = function () {

				return isFinite(this.valueOf())
					? (
						this.getUTCFullYear()
						+ "-"
						+ f(this.getUTCMonth() + 1)
						+ "-"
						+ f(this.getUTCDate())
						+ "T"
						+ f(this.getUTCHours())
						+ ":"
						+ f(this.getUTCMinutes())
						+ ":"
						+ f(this.getUTCSeconds())
						+ "Z"
					)
					: null;
			};

			Boolean.prototype.toJSON = this_value;
			Number.prototype.toJSON = this_value;
			String.prototype.toJSON = this_value;
		}

		var gap;
		var indent;
		var meta;
		var rep;


		function quote(string) {

	// If the string contains no control characters, no quote characters, and no
	// backslash characters, then we can safely slap some quotes around it.
	// Otherwise we must also replace the offending characters with safe escape
	// sequences.

			rx_escapable.lastIndex = 0;
			return rx_escapable.test(string)
				? "\"" + string.replace(rx_escapable, function (a) {
					var c = meta[a];
					return typeof c === "string"
						? c
						: "\\u" + ("0000" + a.charCodeAt(0).toString(16)).slice(-4);
				}) + "\""
				: "\"" + string + "\"";
		}


		function str(key, holder) {

	// Produce a string from holder[key].

			var i;          // The loop counter.
			var k;          // The member key.
			var v;          // The member value.
			var length;
			var mind = gap;
			var partial;
			var value = holder[key];

	// If the value has a toJSON method, call it to obtain a replacement value.

			if (
				value
				&& typeof value === "object"
				&& typeof value.toJSON === "function"
			) {
				value = value.toJSON(key);
			}

	// If we were called with a replacer function, then call the replacer to
	// obtain a replacement value.

			if (typeof rep === "function") {
				value = rep.call(holder, key, value);
			}

	// What happens next depends on the value's type.

			switch (typeof value) {
			case "string":
				return quote(value);

			case "number":

	// JSON numbers must be finite. Encode non-finite numbers as null.

				return (isFinite(value))
					? String(value)
					: "null";

			case "boolean":
			case "null":

	// If the value is a boolean or null, convert it to a string. Note:
	// typeof null does not produce "null". The case is included here in
	// the remote chance that this gets fixed someday.

				return String(value);

	// If the type is "object", we might be dealing with an object or an array or
	// null.

			case "object":

	// Due to a specification blunder in ECMAScript, typeof null is "object",
	// so watch out for that case.

				if (!value) {
					return "null";
				}

	// Make an array to hold the partial results of stringifying this object value.

				gap += indent;
				partial = [];

	// Is the value an array?

				if (Object.prototype.toString.apply(value) === "[object Array]") {

	// The value is an array. Stringify every element. Use null as a placeholder
	// for non-JSON values.

					length = value.length;
					for (i = 0; i < length; i += 1) {
						partial[i] = str(i, value) || "null";
					}

	// Join all of the elements together, separated with commas, and wrap them in
	// brackets.

					v = partial.length === 0
						? "[]"
						: gap
							? (
								"[\n"
								+ gap
								+ partial.join(",\n" + gap)
								+ "\n"
								+ mind
								+ "]"
							)
							: "[" + partial.join(",") + "]";
					gap = mind;
					return v;
				}

	// If the replacer is an array, use it to select the members to be stringified.

				if (rep && typeof rep === "object") {
					length = rep.length;
					for (i = 0; i < length; i += 1) {
						if (typeof rep[i] === "string") {
							k = rep[i];
							v = str(k, value);
							if (v) {
								partial.push(quote(k) + (
									(gap)
										? ": "
										: ":"
								) + v);
							}
						}
					}
				} else {

	// Otherwise, iterate through all of the keys in the object.

					for (k in value) {
						if (Object.prototype.hasOwnProperty.call(value, k)) {
							v = str(k, value);
							if (v) {
								partial.push(quote(k) + (
									(gap)
										? ": "
										: ":"
								) + v);
							}
						}
					}
				}

	// Join all of the member texts together, separated with commas,
	// and wrap them in braces.

				v = partial.length === 0
					? "{}"
					: gap
						? "{\n" + gap + partial.join(",\n" + gap) + "\n" + mind + "}"
						: "{" + partial.join(",") + "}";
				gap = mind;
				return v;
			}
		}

	// If the JSON object does not yet have a stringify method, give it one.

		if (typeof JSON.stringify !== "function") {
			meta = {    // table of character substitutions
				"\b": "\\b",
				"\t": "\\t",
				"\n": "\\n",
				"\f": "\\f",
				"\r": "\\r",
				"\"": "\\\"",
				"\\": "\\\\"
			};
			JSON.stringify = function (value, replacer, space) {

	// The stringify method takes a value and an optional replacer, and an optional
	// space parameter, and returns a JSON text. The replacer can be a function
	// that can replace values, or an array of strings that will select the keys.
	// A default replacer method can be provided. Use of the space parameter can
	// produce text that is more easily readable.

				var i;
				gap = "";
				indent = "";

	// If the space parameter is a number, make an indent string containing that
	// many spaces.

				if (typeof space === "number") {
					for (i = 0; i < space; i += 1) {
						indent += " ";
					}

	// If the space parameter is a string, it will be used as the indent string.

				} else if (typeof space === "string") {
					indent = space;
				}

	// If there is a replacer, it must be a function or an array.
	// Otherwise, throw an error.

				rep = replacer;
				if (replacer && typeof replacer !== "function" && (
					typeof replacer !== "object"
					|| typeof replacer.length !== "number"
				)) {
					throw new Error("JSON.stringify");
				}

	// Make a fake root object containing our value under the key of "".
	// Return the result of stringifying the value.

				return str("", {"": value});
			};
		}


	// If the JSON object does not yet have a parse method, give it one.

		if (typeof JSON.parse !== "function") {
			JSON.parse = function (text, reviver) {

	// The parse method takes a text and an optional reviver function, and returns
	// a JavaScript value if the text is a valid JSON text.

				var j;

				function walk(holder, key) {

	// The walk method is used to recursively walk the resulting structure so
	// that modifications can be made.

					var k;
					var v;
					var value = holder[key];
					if (value && typeof value === "object") {
						for (k in value) {
							if (Object.prototype.hasOwnProperty.call(value, k)) {
								v = walk(value, k);
								if (v !== undefined) {
									value[k] = v;
								} else {
									delete value[k];
								}
							}
						}
					}
					return reviver.call(holder, key, value);
				}


	// Parsing happens in four stages. In the first stage, we replace certain
	// Unicode characters with escape sequences. JavaScript handles many characters
	// incorrectly, either silently deleting them, or treating them as line endings.

				text = String(text);
				rx_dangerous.lastIndex = 0;
				if (rx_dangerous.test(text)) {
					text = text.replace(rx_dangerous, function (a) {
						return (
							"\\u"
							+ ("0000" + a.charCodeAt(0).toString(16)).slice(-4)
						);
					});
				}

	// In the second stage, we run the text against regular expressions that look
	// for non-JSON patterns. We are especially concerned with "()" and "new"
	// because they can cause invocation, and "=" because it can cause mutation.
	// But just to be safe, we want to reject all unexpected forms.

	// We split the second stage into 4 regexp operations in order to work around
	// crippling inefficiencies in IE's and Safari's regexp engines. First we
	// replace the JSON backslash pairs with "@" (a non-JSON character). Second, we
	// replace all simple value tokens with "]" characters. Third, we delete all
	// open brackets that follow a colon or comma or that begin the text. Finally,
	// we look to see that the remaining characters are only whitespace or "]" or
	// "," or ":" or "{" or "}". If that is so, then the text is safe for eval.

				if (
					rx_one.test(
						text
							.replace(rx_two, "@")
							.replace(rx_three, "]")
							.replace(rx_four, "")
					)
				) {

	// In the third stage we use the eval function to compile the text into a
	// JavaScript structure. The "{" operator is subject to a syntactic ambiguity
	// in JavaScript: it can begin a block or an object literal. We wrap the text
	// in parens to eliminate the ambiguity.

					j = eval("(" + text + ")");

	// In the optional fourth stage, we recursively walk the new structure, passing
	// each name/value pair to a reviver function for possible transformation.

					return (typeof reviver === "function")
						? walk({"": j}, "")
						: j;
				}

	// If the text is not JSON parseable, then a SyntaxError is thrown.

				throw new SyntaxError("JSON.parse");
			};
		}
	}());
}
